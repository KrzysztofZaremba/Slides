x = "X",
y = "Y") +
theme_minimal()
print(gg)
library(ggplot2)
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100, sd=3)
# Create a data frame
data <- data.frame(x, y)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color="black") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(lm(y ~ x), data)), color = "red", alpha = 0.2) +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_minimal()
print(gg)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color="black") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(lm(y ~ x), data)), color = "red", alpha = 0.2, linetype="dashed") +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_minimal()
library(ggplot2)
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100, sd=3)
# Create a data frame
data <- data.frame(x, y)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color="black") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(lm(y ~ x), data)), color = "red", alpha = 0.2, linetype="dashed") +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_minimal()
print(gg)
library(ggplot2)
# Generate some sample data
set.seed(123)
x <- rnorm(500)
y <- 2 + 3 * x + rnorm(500, sd=3)
# Create a data frame
data <- data.frame(x, y)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color="black") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(lm(y ~ x), data)), color = "red", alpha = 0.2, linetype="dashed") +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_minimal()
print(gg)
library(ggplot2)
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100, sd=3)
# Create a data frame
data <- data.frame(x, y)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color="black") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(lm(y ~ x), data)), color = "red", alpha = 0.2, linetype="dashed") +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_minimal()
print(gg)
# Load the ggplot2 library
library(ggplot2)
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100)
# Create a data frame
data <- data.frame(x, y)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(lm(y ~ x), data)), color = "red", alpha = 0.5) +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_minimal() +
scale_x_continuous(expand = c(0, 0)) +  # Set x-axis to intersect at 0
scale_y_continuous(expand = c(0, 0))    # Set y-axis to intersect at 0
print(gg)
library(ggplot2)
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100, sd=3)
# Create a data frame
data <- data.frame(x, y)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color="black") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(lm(y ~ x), data)), color = "red", alpha = 0.2, linetype="dashed") +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_minimal() +
coord_cartesian(xlim = c(-3, 3), ylim = c(-10, 20))  # Set xlim and ylim to control the axis limits
print(gg)
# Load the ggplot2 library
library(ggplot2)
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100, sd=3)
# Create a data frame
data <- data.frame(x, y)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color="black") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(lm(y ~ x), data)), color = "red", alpha = 0.2, linetype="dashed") +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_minimal() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")    # Add vertical line at x = 0
print(gg)
# Load the ggplot2 library
library(ggplot2)
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100, sd=2)
# Create a data frame
data <- data.frame(x, y)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color="black") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(lm(y ~ x), data)), color = "red", alpha = 0.2, linetype="dashed") +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_minimal() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")    # Add vertical line at x = 0
print(gg)
library(ggplot2)
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100, sd=3)
# Create a data frame
data <- data.frame(x, y)
# Fit a linear regression model
model <- lm(y ~ x, data)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(model, data)), color = "red", alpha = 0.2, linetype = "dashed") +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_minimal() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black") +  # Add vertical line at x = 0
annotate("text", x = -2.5, y = 1.5, label = expression(e[i]), parse = TRUE)
print(gg)
library(ggplot2)
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100, sd=3)
# Create a data frame
data <- data.frame(x, y)
# Fit a linear regression model
model <- lm(y ~ x, data)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(model, data)), color = "red", alpha = 0.2, linetype = "dashed") +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_minimal() +
annotate("text", x = -2.5, y = 1.5, label = expression(e[i]), parse = TRUE)
print(gg)
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100, sd=3)
# Create a data frame
data <- data.frame(x, y)
# Fit a linear regression model on the full dataset
full_model <- lm(y ~ x, data)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_segment(aes(xend = x, yend = predict(full_model, data)), color = "red", alpha = 0.2, linetype = "dashed") +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_xaringan() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")
# Create a filtered dataset for the sample (e.g., the first 40 points)
sample_size <- 40
sample_data <- data[1:sample_size, ]
# Fit a new linear regression model on the sample
sample_model <- lm(y ~ x, sample_data)
# Add the new best fit line for the sample
gg <- gg +
geom_smooth(data = sample_data, aes(x = x, y = y), method = "lm", se = FALSE, color = "green") +
geom_segment(data = sample_data, aes(xend = x, yend = predict(sample_model, sample_data)), color = "gray", alpha = 0.2, linetype = "dashed")
print(gg)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "blue", alpha=0.1) +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_xaringan() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")
gg
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "blue", alpha=0.01) +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_xaringan() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100, sd=3)
# Create a data frame
data <- data.frame(x, y)
# Fit a linear regression model on the full dataset
full_model <- lm(y ~ x, data)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "black", color = "lightgray", alpha = 0.2) +
geom_smooth(method = "lm", se = FALSE, color = "lightgray", alpha=0.01) +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_xaringan() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")
# Create a filtered dataset for the sample (e.g., the first 40 points)
sample_size <- 40
sample_data <- data[1:sample_size, ]
# Fit a new linear regression model on the sample
sample_model <- lm(y ~ x, sample_data)
# Add the new best fit line for the sample
gg <- gg +
geom_smooth(data = sample_data, aes(x = x, y = y), method = "lm", se = FALSE, color = "green") +
geom_segment(data = sample_data, aes(xend = x, yend = predict(sample_model, sample_data)), color = "gray", alpha = 0.2, linetype = "dashed")
print(gg)
# Add the new best fit line for the sample
gg <- gg +
geom_smooth(data = sample_data, aes(x = x, y = y), method = "lm", se = FALSE, color = "green") +
geom_segment(data = sample_data, aes(xend = x, yend = predict(sample_model, sample_data)), color = "black", alpha = 0.2, linetype = "dashed")
print(gg)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "lightgray", alpha = 0.2) +
geom_smooth(method = "lm", se = FALSE, color = "lightgray", alpha=0.01) +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_xaringan() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "lightgray", alpha = 0.2) +
geom_smooth(method = "lm", se = FALSE, color = "lightgray", alpha=0.01) +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_xaringan() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")
# Create a filtered dataset for the sample (e.g., the first 40 points)
sample_size <- 40
sample_data <- data[1:sample_size, ]
# Fit a new linear regression model on the sample
sample_model <- lm(y ~ x, sample_data)
# Add the new best fit line for the sample
gg <- gg +
geom_point(data = sample_data, color = "black"") +
geom_smooth(data = sample_data, aes(x = x, y = y), method = "lm", se = FALSE, color = "green") +
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "lightgray", alpha = 0.2) +
geom_smooth(method = "lm", se = FALSE, color = "lightgray", alpha=0.01) +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_xaringan() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")
# Create a filtered dataset for the sample (e.g., the first 40 points)
sample_size <- 40
sample_data <- data[1:sample_size, ]
# Fit a new linear regression model on the sample
sample_model <- lm(y ~ x, sample_data)
# Add the new best fit line for the sample
gg <- gg +
geom_point(data = sample_data, color = "black"") +
geom_smooth(data = sample_data, aes(x = x, y = y), method = "lm", se = FALSE, color = "green") +
# Fit a linear regression model on the full dataset
full_model <- lm(y ~ x, data)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "lightgray", alpha = 0.2) +
geom_smooth(method = "lm", se = FALSE, color = "lightgray", alpha=0.01) +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_xaringan() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")
# Create a filtered dataset for the sample (e.g., the first 40 points)
sample_size <- 40
sample_data <- data[1:sample_size, ]
# Fit a new linear regression model on the sample
sample_model <- lm(y ~ x, sample_data)
# Add the new best fit line for the sample
gg <- gg +
geom_point(data = sample_data, color = "black") +
geom_smooth(data = sample_data, aes(x = x, y = y), method = "lm", se = FALSE, color = "green") +
geom_segment(data = sample_data, aes(xend = x, yend = predict(sample_model, sample_data)), color = "black", alpha = 0.2, linetype = "dashed")
print(gg)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "lightgray", alpha = 0.2) +
geom_smooth(method = "lm", se = FALSE, color = "lightgray", alpha=0.01) +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_xaringan() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")
# Add the new best fit line for the sample
gg <- gg +
geom_point(data = sample_data, color = "black") +
geom_smooth(data = sample_data, aes(x = x, y = y), method = "lm", se = FALSE, color = "green") +
geom_segment(data = sample_data, aes(xend = x, yend = predict(sample_model, sample_data)), color = "black", alpha = 0.2, linetype = "dashed")
# Generate some sample data
set.seed(123)
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100, sd=3)
# Create a data frame
data <- data.frame(x, y)
# Fit a linear regression model on the full dataset
full_model <- lm(y ~ x, data)
# Create a scatter plot with the best fit line and deviations
gg <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "lightgray", alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "lightgray", alpha=0.01) +
labs(title = "Population Regression",
x = "X",
y = "Y") +
theme_xaringan() +
geom_hline(yintercept = 0, color = "black") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, color = "black")
# Create a filtered dataset for the sample (e.g., the first 40 points)
sample_size <- 40
sample_data <- data[1:sample_size, ]
# Fit a new linear regression model on the sample
sample_model <- lm(y ~ x, sample_data)
# Add the new best fit line for the sample
gg <- gg +
geom_point(data = sample_data, color = "black") +
geom_smooth(data = sample_data, aes(x = x, y = y), method = "lm", se = FALSE, color = "green") +
geom_segment(data = sample_data, aes(xend = x, yend = predict(sample_model, sample_data)), color = "black", alpha = 0.2, linetype = "dashed")
print(gg)
xaringan::inf_mr()
xaringan::inf_mr()
Data_BP$TMP=round(Data_BP$TMP,2)
Data_BP$PM2.5=round(Data_BP$PM2.5,2)
save(Data_BP, file="Daily_CMX_means2.Rda")
xaringan::inf_mr()
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
runApp('~/Linear_regression')
shiny::runApp('~/Rsquared')
runApp('Rsquared')
library(shiny)
library(plotly)
# Define the UI
ui <- fluidPage(
titlePanel("SST and SSE Interactive Visualization"),
sidebarLayout(
sidebarPanel(
sliderInput("slope", "Slope:", min = 0, max = 2, value = 0.125, step = 0.025),
sliderInput("variance", "Variance:", min = 0, max = 20, value = 8, step = 1)
),
mainPanel(
plotlyOutput("regressionPlot")
)
)
)
# Define the server logic
server <- function(input, output) {
output$regressionPlot <- renderPlotly({
set.seed(17)
x <- (1:24) * 2
y <- 24 + x * input$slope + input$variance * rnorm(length(x))
data <- data.frame(x, y)
p <- ggplot(data, aes(x, y)) +
geom_point(pch = 19, cex = 0.8) +
geom_smooth(method = "lm", formula = y ~ x, color = "blue", se = FALSE) +
labs(title = "Linear Regression Plot",
x = "X",
y = "Y") +
theme_minimal()
ggplotly(p)
})
}
# Run the Shiny app
shinyApp(ui = ui, server = server)
runApp('Linear_regression')
runApp('Linear_regression')
set.seed(17)
x <- rnorm(0,5)
y <- 3 + x * input$slope + input$variance * rnorm(length(x))
data <- data.frame(x, y)
y <- 3 + x * input$slope + input$variance * rnorm(length(x))
y=3 + x * 2 + 1 * rnorm(length(x))
data <- data.frame(x, y)
rnorm(0,5)
x <- rnorm(50,0,5)
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runif(20, -10, 10)
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
shiny::runApp('Linear_regression')
runApp('Linear_regression')
?add_text()
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
runApp('Linear_regression')
var(Daily_CMX$TMP)
var(Daily_CMX$TMP)*(1805)
xaringan::inf_mr()
var(Daily_CMX$TMP)*(1805)
var(Daily_CMX$Trips)*(781)
var(Data_BP)*(780)
var(Data_BP$Trips)*(780)
var(Data_BP$TMP)*(780)
723.55*4043.965/24012556582
var(Data_BP$TMP)*(780)
var(Data_BP$Trips)*(780)
var(Data_BP$Trips)
View(Data_BP)
sd(Data_BP$Trips)
723.55*4043.965
723.55^2*4043.965/24012556582
