shiny::runApp()
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Linear_regression')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp()
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
observeEvent(input$update, {
# Generate random data
set.seed(123)
x <- rnorm(100)
y <- 2 * x + rnorm(100)
# Apply user-specified transformations
x_transformed <- (x + input$constant_x) * input$x_scale
y_transformed <- (y + input$constant_y) * input$y_scale
# Fit regression models
model_original <- lm(y ~ x)
model_transformed <- lm(y_transformed ~ x_transformed)
# Extract coefficients for original and transformed models
beta0_original <- coef(model_original)[1]
beta1_original <- coef(model_original)[2]
beta0_transformed <- coef(model_transformed)[1]
beta1_transformed <- coef(model_transformed)[2]
# Create a scatterplot with both regression lines
plot_data <- data.frame(x, y, x_transformed, y_transformed)
p <- ggplot(plot_data) +
geom_point(aes(x, y), color = "gray") +
geom_point(aes(x_transformed, y_transformed), color = "black") +
geom_abline(intercept = beta0_original, slope = beta1_original, color = "red", linetype = "dashed") +
geom_abline(intercept = beta0_transformed, slope = beta1_transformed, color = "blue") +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
labs(
title = "Linear Regression Comparison",
x = "X",
y = "Y"
)+
xlim(-10,10)+
ylim(-10,10)+
theme_minimal()
# Show the plot
output$regression_plot <- renderPlot({
p
})
# Calculate the relationship between beta_x and beta_z
beta_x <- beta1_original
beta_z <- beta1_transformed / input$x_scale
message <- paste("Original Regression (Y on X): Y = ", round(beta0_original, 2), " + ", round(beta1_original, 2), "X\n")
message <- paste(message, "Transformed Regression (Y' on Z): Y' = ", round(beta0_transformed, 2), " + ", round(beta1_transformed, 2), "Z\n")
message <- paste(message, "Beta_x (Original) =", round(beta_x, 2), "\n")
message <- paste(message, "Beta_z (Transformed) =", round(beta_z, 2))
cat(message)
})
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
runApp('C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Scaling_variables')
