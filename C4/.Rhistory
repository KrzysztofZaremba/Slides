load("Accidents_CDMX")
library(tidyverse)
#### Linear Regression ----
incidentes <- read.csv("C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/incidentes-viales-c5-2019.csv", header=TRUE)
incidentes$fecha_cierre=gsub("2019","19",incidentes$fecha_cierre)
incidentes$date=as.Date(incidentes$fecha_cierre, format = "%d/%m/%y")
load("C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Daily_CMX_means.Rda")
Inc=merge(incidentes,Daily_CMX, by.x="date", by.y="datetime")
## plot histogram of hours worked
save(Accidents, file="Accidents_CDMX")
## Aggregate by date and neighborhood
Accidents=Inc%>%
group_by(date, delegacion_cierre)%>%
summarize(N_acc=n(), NOx=mean(NOx, rm.na=TRUE))
save(Accidents, file="Accidents_CDMX.Rda")
load("Accidents_CDMX.Rda")
a=lm(N_acc~NOx,
data=Accidents)
summary(a)
## Pick a neighborhood, filter the data.
M_accidents=Accidents[Accidents$delegacion_cierre=="MIGUEL HIDALGO",]
## Create a histogram of accidents
hist(M_accidents$N_acc)
## create a histogram of temperatures
hist(M_accidents$NOx)
## plot number of accidents in that neighborhood by date.
ggplot(data=M_accidents, aes(x=date, y=N_acc))+
geom_line()
ggplot(data=M_accidents, aes(x=date, y=NOx))+
geom_line()
##Find the day with the highest number of accidents
which.max(M_accidents$N_acc)
##Find the day with the highest number of accidents
M_accidents$date[which.max(M_accidents$N_acc)]
## Create a scatterplot of number of accideents vs NOx
ggplot(data=M_accidents, aes(x=NOx, y=N_acc))+
geom_point()
## Find beta 0 and beta 1
model1=lm(N_acc~NOx,
data=M_accidents)
summary(model1)
summary(model1)
cov(M_accidents$N_acc)
cov(M_accidents$N_acc,M_accidents$NOx)
cov(M_accidents$N_acc,M_accidents$NOx, rm.na=TRUE)
?cov
cov(M_accidents$N_acc,M_accidents$NOx, na.rm=TRUE)
cov(M_accidents$N_acc,M_accidents$NOx)
##find yhat
predict(model1)
##find yhat
M_accidents$yhat=predict(model1)
## Aggregate by date and neighborhood
Accidents=Inc%>%
group_by(date, delegacion_cierre)%>%
summarize(N_acc=n(), NOx=mean(NOx, rm.na=TRUE))%>%
filter(!is.na(N_acc))
## Aggregate by date and neighborhood
Accidents=Inc%>%
group_by(date, delegacion_cierre)%>%
summarize(N_acc=n(), NOx=mean(NOx, rm.na=TRUE))%>%
filter(!is.na(N_acc))%>%
filteR(!is.na(NOx))
## Aggregate by date and neighborhood
Accidents=Inc%>%
group_by(date, delegacion_cierre)%>%
summarize(N_acc=n(), NOx=mean(NOx, rm.na=TRUE))%>%
filter(!is.na(N_acc))%>%
filter(!is.na(NOx))
save(Accidents, file="Accidents_CDMX.Rda")
##manual b1
cov(M_accidents$N_acc, M_accidents$NOx)
## Pick a neighborhood, filter the data.
M_accidents=Accidents[Accidents$delegacion_cierre=="MIGUEL HIDALGO",]
##manual b1
cov(M_accidents$N_acc, M_accidents$NOx)
View(M_accidents)
View(Accidents)
## Pick a neighborhood, filter the data.
M_accidents=Accidents[Accidents$delegacion_cierre=="MIGUEL HIDALGO",]
View(M_accidents)
## Aggregate by date and neighborhood
Accidents=Inc%>%
group_by(date, delegacion_cierre)%>%
summarize(N_acc=n(), NOx=mean(NOx, rm.na=TRUE))%>%
filter(!is.na(N_acc))%>%
filter(!is.na(NOx))%>%
filteR(!is.na(delegacion_cierre))
## Aggregate by date and neighborhood
Accidents=Inc%>%
group_by(date, delegacion_cierre)%>%
summarize(N_acc=n(), NOx=mean(NOx, rm.na=TRUE))%>%
filter(!is.na(N_acc))%>%
filter(!is.na(NOx))%>%
filter(!is.na(delegacion_cierre))
save(Accidents, file="Accidents_CDMX.Rda")
## Pick a neighborhood, filter the data.
M_accidents=Accidents[Accidents$delegacion_cierre=="MIGUEL HIDALGO",]
##manual b1
cov(M_accidents$N_acc, M_accidents$NOx)
##manual b1
cov(M_accidents$N_acc, M_accidents$NOx)/var(M_accidents$NOx)
summary(model1)
##manual b1
cov(M_accidents$N_acc, M_accidents$NOx)/var(M_accidents$NOx)
##find yhat
M_accidents$yhat=predict(model1)
##plot yhat
ggplot(data=M_accidents, aes(x=NOx, y=yhat))+
geom_point()
##plot yhat
ggplot(data=M_accidents, aes(x=NOx, y=yhat))+
geom_point()+
geom_point(aes(x=NOx, y=N_acc), color="grey")
## Find residuals, check they are the same as y-yhat
M_accidents$residuals=M_accidents$N_acc-M_accidents$yhat
## Find residuals, check they are the same as y-yhat
M_accidents$residuals=M_accidents$N_acc-M_accidents$yhat
model1$residuals
M_accidents$residuals
model1$residuals=M_accidents$residuals
## Find residuals, check they are the same as y-yhat
M_accidents$residuals=M_accidents$N_acc-M_accidents$yhat
model1$residuals==M_accidents$residuals
##let's plot them against yhat
ggplot(data=M_accidents, aes(x=yhat, y=residuals))+
geom_point()
##let's normalize them and do a qqplot
qq_plot <- ggplot(M_accidents) +
geom_qq(aes(sample = scale(residuals))) +
geom_abline(color = "red") +
coord_fixed()
##let's normalize them and do a qqplot
ggplot(M_accidents) +
geom_qq(aes(sample = scale(residuals))) +
geom_abline(color = "red") +
coord_fixed()
sigmasq=sum(model1$residuals^2)
model1$df.residual
sigmasq=sum(model1$residuals^2)/(model1$df.residual)
sigmasq
model1
## test for beta 1 being smaller than 300
<- t.test(coef(model1)["NOx"] - 2)
## test for beta 1 being smaller than 300
t.test(coef(model1)["NOx"] - 2)
## test for beta 1 being smaller than 300
t.test(coef(model1)["x"] - 2)
coef(model1)
coef(model1)
coef(model1)["NOx"]
?t-test
?t.test
model1$coefficients
model1$coefficients
Ttest=coef(model1)["NOx"]-300/
## Find confidence interval of betas
sqrt(diag(vcov(model)))
Ttest=coef(model1)["NOx"]-300/
## Find confidence interval of betas
sqrt(diag(vcov(model1)))
## Find confidence interval of betas
sqrt(diag(vcov(model1)))
summary(model1)
vcov(model1)
sqrt(diag(vcov(model1)))[2]
SEb1=sqrt(diag(vcov(model1)))[2]
Ttest=(coef(model1)["NOx"]-300)/SEb1
Ttest
Ttest
##find p-value
pt(q=Ttest, df=model1$df.residual, lower.tail = TRUE)
##find p-value
pt(q=Ttest, df=model1$df.residual, lower.tail = FALSE)
## Find confidence interval of betas
confint(model1, level = 0.90)
## Find confidence interval of betas
confint(model1, level = 0.95)
## test for beta 1 being larger than 300
b1=coef(model1)["NOx"]
##find p-value
pt(q=Ttest, df=dfdm, lower.tail = FALSE)
dfdm=model1$df.residual
##which is same as:
b1+SEb1*qt(0.975, dfdm)
b1-SEb1*qt(0.975, dfdm)
## Find confidence interval of betas
confint(model1, level = 0.95)
##which is same as:
b1-SEb1*qt(0.975, dfdm)
b1+SEb1*qt(0.975, dfdm)
coef(model1)
## Predict the response if no rises to 0.1
b0=coef(model1)["(Intercept)"]
b0+b1*0.1
b0+b1*0.1
## Find mean response and new observation conf intervals
predict(model, newdata = new_data, interval = "confidence")
## Find mean response and new observation conf intervals
# New value of x for which you want to predict
x_new <- 0.1
# Create a data frame with the new value of x
new_data <- data.frame(NOx = x_new)
predict(model1, newdata = new_data, interval = "confidence")
predict(model1, newdata = new_data, interval = "prediction")
## Make anova table
anova(lm_model)[1]
## Make anova table
anova(model1)
predict(model1, newdata = new_data, interval = "prediction")
summary(M_accidents$NOx)
predict(model1, newdata = new_data, interval = "confidence", level=0.95)
a=predict(model1, newdata = new_data, interval = "confidence", level=0.95)
b=predict(model1, newdata = new_data, interval = "prediction", level=0.95)
summary(a)
predict(model1, newdata = new_data, interval = "confidence", level=0.95)
predict(model1, newdata = new_data, interval = "prediction", level=0.95)
### what is the probability that a number of accidents on a new day with NOx=0.05 number of is lower than 100?
### Wow we can make
predict(model1, newdata = new_data, interval = "prediction", level=0.95, se.fit=TRUE)
### what is the probability that a number of accidents on a new day with NOx=0.05 number of is lower than 100?
### Wow we can make
predict(model1, newdata = new_data, interval = "prediction", level=0.95, se.fit=TRUE)
### what is the probability that a number of accidents on a new day with NOx=0.05 number of is lower than 100?
### Wow we can make
predict(model1, newdata = new_data, interval = "confidence", level=0.95, se.fit=TRUE)
prediction
### what is the probability that a number of accidents on a new day with NOx=0.05 number of is lower than 100?
### Wow we can make
predict(model1, newdata = new_data, interval = "prediction", level=0.95, se.fit=TRUE)
SEb1
sigmasq
sigmasq=sum(model1$residuals^2)/(model1$df.residual)
sigmasq
\sqrt(sigmasq)
sqrt(sigmasq)
?predict
summary(model1)
### what is the probability that a number of accidents on a new day with NOx=0.05 number of is lower than 100?
### Wow we can make
predict(model1, newdata = new_data, interval = "prediction", level=0.95, se.fit=TRUE)
predict(model1, newdata = new_data, interval = "confidence", level=0.95)
e3=(0.1-mean(M_accidents$NOx)^2/(var(M_accidents$NOx)*(n-1))
e3
e3=(0.1-mean(M_accidents$NOx)^2/(var(M_accidents$NOx)*(n-1))
e3
e3=(0.1-mean(M_accidents$NOx))^2/(var(M_accidents$NOx)*(n-1))
e3=(0.1-mean(M_accidents$NOx))^2/(var(M_accidents$NOx)*(n-1))
e3=(0.1-mean(M_accidents$NOx))^2/(var(M_accidents$NOx)*(dfdm+1))
e3
e1
e2
e2=1/(dfdm+2)
e1=1
se_pred=sqrt(sigmasq*(e1+e2+e3))
se_pred
sqrt(sigmasq*(e1+e2+e3))
b0+b1*0.1
b0+b1*0.1
b0+b1*0.1+2*se_pred
## Predict the response if no rises to 0.1
b0=as.numeric(coef(model1)["(Intercept)"])
b0+b1*0.1
## test for beta 1 being larger than 300
b1=as.numeric(coef(model1)["NOx"])
b0+b1*0.1
b0+b1*0.1+2*se_pred
predict(model1, newdata = new_data, interval = "confidence", level=0.95)
predict(model1, newdata = new_data, interval = "prediction", level=0.95)
b0+b1*0.1+2*se_pred
b0+b1*0.1+1.96*se_pred
## Find mean response and new observation conf intervals
# New value of x for which you want to predict
x_new <- 0.01
1 - pnorm(t, mean = b0+b1*0.05, sd = se_pred)
se_pred
b0+b1*0.05
1 - pnorm(50, mean = b0+b1*0.05, sd = se_pred)
1 - pnorm(50, mean = b0+b1*0.1, sd = se_pred)
se_pred=sqrt(sigmasq*(e1+e2+e3))
pred=b0+b1*0.1
1 - pnorm(50, mean = pred, sd = se_pred)
library(tidyverse)
#### Linear Regression ----
incidentes <- read.csv("C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/incidentes-viales-c5-2019.csv", header=TRUE)
incidentes$fecha_cierre=gsub("2019","19",incidentes$fecha_cierre)
incidentes$date=as.Date(incidentes$fecha_cierre, format = "%d/%m/%y")
load("C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/C4_a/Daily_CMX_means.Rda")
Inc=merge(incidentes,Daily_CMX, by.x="date", by.y="datetime")
## plot histogram of hours worked
## Aggregate by date and neighborhood
Accidents=Inc%>%
group_by(date, delegacion_cierre)%>%
summarize(N_acc=n(), NOx=mean(NOx, rm.na=TRUE))%>%
filter(!is.na(N_acc))%>%
filter(!is.na(NOx))%>%
filter(!is.na(delegacion_cierre))
save(Accidents, file="Accidents_CDMX.Rda")
## Pick a neighborhood, filter the data.
M_accidents=Accidents[Accidents$delegacion_cierre=="MIGUEL HIDALGO",]
## Create a histogram of accidents
hist(M_accidents$N_acc)
## create a histogram of temperatures
hist(M_accidents$NOx)
View(M_accidents)
## plot number of accidents in that neighborhood by date.
ggplot(data=M_accidents, aes(x=date, y=N_acc))+
geom_line()
ggplot(data=M_accidents, aes(x=date, y=NOx))+
geom_line()
load("Accidents_CDMX.Rda")
## Pick a neighborhood, filter the data.
M_accidents=Accidents[Accidents$delegacion_cierre=="MIGUEL HIDALGO",]
## Create a histogram of accidents
hist(M_accidents$N_acc)
## create a histogram of temperatures
hist(M_accidents$NOx)
## plot number of accidents in that neighborhood by date.
ggplot(data=M_accidents, aes(x=date, y=N_acc))+
geom_line()
load("C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/Accidents_CDMX.Rda")
## Pick a neighborhood, filter the data.
M_accidents=Accidents[Accidents$delegacion_cierre=="MIGUEL HIDALGO",]
## Create a histogram of accidents
hist(M_accidents$N_acc)
## create a histogram of temperatures
hist(M_accidents$NOx)
## plot number of accidents in that neighborhood by date.
ggplot(data=M_accidents, aes(x=date, y=N_acc))+
geom_line()
library(tidyverse)
load("C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C4/Accidents_CDMX.Rda")
## Pick a neighborhood, filter the data.
M_accidents=Accidents[Accidents$delegacion_cierre=="MIGUEL HIDALGO",]
## Create a histogram of accidents
hist(M_accidents$N_acc)
## create a histogram of temperatures
hist(M_accidents$NOx)
## plot number of accidents in that neighborhood by date.
ggplot(data=M_accidents, aes(x=date, y=N_acc))+
geom_line()
