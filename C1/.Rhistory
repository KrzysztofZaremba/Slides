xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()\
# Create a Leaflet map with clustering
wifi_map <- leaflet(wifi_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~Longitud, lat = ~Latitud, popup = ~Programa, radius = 5, color = "blue", clusterOptions = markerClusterOptions()) %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Greyscale") %>%
addLayersControl(
baseGroups = c("Greyscale"),
options = layersControlOptions(collapsed = FALSE)
) %>%
setView(lng = mean(as.numeric(wifi_data$Longitud), na.rm = TRUE),
lat = mean(as.numeric(wifi_data$Latitud), na.rm = TRUE), zoom = 10)
wifi_data
wifi_map <- leaflet(wifi_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~Longitud, lat = ~Latitud, popup = ~Programa, radius = 5, color = "blue", clusterOptions = markerClusterOptions())
View(wifi_map)
# Print the map
wifi_map
wifi_data$Longitud
mean(as.numeric(wifi_data$Longitud)
mean(as.numeric(wifi_data$Longitud), na.rm = TRUE)
mean(as.numeric(wifi_data$Longitud), na.rm = TRUE)
mean(as.numeric(wifi_data$Longitud), na.rm = TRUE)
mean(as.numeric(wifi_data$Longitud), na.rm = TRUE)
mean(as.numeric(wifi_data$Latitud), na.rm = TRUE)
mean(as.numeric(wifi_data$Latitud), na.rm = TRUE)
mean(as.numeric(wifi_data$Latitud), na.rm = TRUE)
View(wifi_map)
View(wifi_data)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(dplyr)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(readr)
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(gapminder)
library(knitr)
library(kableExtra)
library(DT)
#aliminatre latutides different larger than 20 and smaller than 18
#eliminates longitudes larger than 100 and smaller than 97
wifi_data=wifi_data%>%filter(Latitud<20)%>%filter(Latitud>18)%>%filter(Longitud<(-97))%>%filter(Longitud>(-100))
# Create a Leaflet map with clustering
wifi_map <- leaflet(wifi_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~Longitud, lat = ~Latitud, popup = ~Programa, radius = 5, color = "blue", clusterOptions = markerClusterOptions()) %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Greyscale") %>%
addLayersControl(
baseGroups = c("Greyscale"),
options = layersControlOptions(collapsed = FALSE)
) %>%
setView(lng = mean(as.numeric(wifi_data$Longitud), na.rm = TRUE),
lat = mean(as.numeric(wifi_data$Latitud), na.rm = TRUE), zoom = 10)
# Print the map
wifi_map
# Create a Leaflet map with clustering
wifi_map <- leaflet(wifi_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~Longitud, lat = ~Latitud, popup = ~Programa, radius = 5, color = "blue", clusterOptions = markerClusterOptions()) %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Greyscale") %>%
addLayersControl(
baseGroups = c("Greyscale"),
options = layersControlOptions(collapsed = FALSE)
) %>%
setView(lng = mean(as.numeric(wifi_data$Longitud), na.rm = TRUE),
lat = mean(as.numeric(wifi_data$Latitud), na.rm = TRUE), zoom = 10)
# Print the map
wifi_map
xaringan::inf_mr()
xaringan::inf_mr()
library(renderthis)
#remotes::install_github('rstudio/chromote')
to_pdf("C_1_slides.html")
library(renderthis)
#remotes::install_github('rstudio/chromote')
to_pdf("C_1_slides.html")
library(renderthis)
#remotes::install_github('rstudio/chromote')
to_pdf("C_1_slides_no_map.html")
xaringan::inf_mr()
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(dplyr)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(readr)
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(gapminder)
library(knitr)
library(kableExtra)
library(DT)
# Read CSV file
file_url <- "https://datos.cdmx.gob.mx/dataset/aa2ff336-b4aa-44f3-b38a-f303ef0f7673/resource/98f51fe2-18cb-4f50-a989-b9f81a2b5a76/download/2023-08-03-puntos_de_acceso_wifi.csv"
wifi_data <- read_csv(file_url,show_col_types = FALSE)
#aliminatre latutides different larger than 20 and smaller than 18
#eliminates longitudes larger than 100 and smaller than 97
wifi_data=wifi_data%>%filter(latitud<20)%>%filter(latitud>18)%>%filter(longitud<(-97))%>%filter(longitud>(-100))
# Create a Leaflet map with clustering
wifi_map <- leaflet(wifi_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~longitud, lat = ~latitud, popup = ~Programa, radius = 5, color = "blue", clusterOptions = markerClusterOptions()) #%>%
#aliminatre latutides different larger than 20 and smaller than 18
#eliminates longitudes larger than 100 and smaller than 97
wifi_data=wifi_data%>%filter(latitud<20)%>%filter(latitud>18)%>%filter(longitud<(-97))%>%filter(longitud>(-100))
# Create a Leaflet map with clustering
wifi_map <- leaflet(wifi_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~longitud, lat = ~latitud, popup = ~programa, radius = 5, color = "blue", clusterOptions = markerClusterOptions()) #%>%
# Create a Leaflet map with clustering
wifi_map <- leaflet(wifi_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~longitud, lat = ~latitud, popup = ~programa, radius = 5, color = "blue", clusterOptions = markerClusterOptions()) %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Greyscale") %>%
addLayersControl(
baseGroups = c("Greyscale"),
options = layersControlOptions(collapsed = FALSE)
) %>%
setView(lng = mean(as.numeric(wifi_data$longitud), na.rm = TRUE),
lat = mean(as.numeric(wifi_data$latitud), na.rm = TRUE), zoom = 10)
# Print the map
wifi_map
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Most basic bubble plot
data=data %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country))
a <- ggplot(data=data, aes(x=gdpPercap, y=lifeExp, size=pop, fill=continent, text=country)) +
geom_point(alpha=0.5, shape=21, color="black") +
scale_size(range = c(.1, 24), name="Population (M)") +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(legend.position="bottom",
axis.title.x = element_text(size = 16), # Increase x-axis label font size
axis.title.y = element_text(size = 16), # Increase y-axis label font size
legend.text = element_text(size = 14)) + # Increase legend text font size
ylab("Life Expectancy") +
xlab("Gdp per Capita") +
theme(legend.position = "none")
ggplotly(a, tooltip="text",
width = 500,   # Adjust the width according to your preference
height = 450)
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
# Load dataset from github
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data$date <- as.Date(data$date)
# Usual area chart
p <- data %>%
ggplot( aes(x=date, y=value)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()+
theme(legend.position="bottom",
axis.title.x = element_text(size = 16), # Increase x-axis label font size
axis.title.y = element_text(size = 16), # Increase y-axis label font size
legend.text = element_text(size = 14)) # Increase legend text font size
# Turn it interactive with ggplotly
p <- ggplotly(p,
width = 500,   # Adjust the width according to your preference
height = 450)
# Turn it interactive with ggplotly
p <- ggplotly(p,
width = 500,   # Adjust the width according to your preference
height = 450)
p
R.version
library(installlr)
library(installr)
install.packages("installr")
library(installr)
updateR()
.libPath()
.libPaths()
install.packages("xaringan")
