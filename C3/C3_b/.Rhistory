t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Sampling Distribution of Sample Mean",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(mu - 1.96*frac(sigma, sqrt(n))),
expression(mu),
expression(mu + 1.96*frac(sigma, sqrt(n)))))
# Add a vertical line at the mean (mu)
abline(v = 0, col = "red", lwd = 2)
# Shade the middle 95% region
transparent_color <- rgb(70, 130, 180, alpha = 50, maxColorValue = 255)
polygon(x = c(-1.96, seq(-1.96, 1.96, 0.01), 1.96),
y = c(0, dt(seq(-1.96, 1.96, 0.01), df), 0),
col = transparent_color)
# Add the "95%" label
text(0, 0.2, "95%", col = "black", cex = 1.5)
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-3, 3, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(mu - 1.96*frac(sigma, sqrt(n))),
expression(mu),
expression(mu + 1.96*frac(sigma, sqrt(n)))))
# Add a vertical line at the mean (mu)
abline(v = 0, col = "red", lwd = 2)
# Shade the middle 95% region
transparent_color <- rgb(70, 130, 180, alpha = 50, maxColorValue = 255)
polygon(x = c(-1.96, seq(-1.96, 1.96, 0.01), 1.96),
y = c(0, dt(seq(-1.96, 1.96, 0.01), df), 0),
col = transparent_color)
# Add the "95%" label
text(0, 0.2, "95%", col = "black", cex = 1.5)
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-3, 3, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(1.96),
0,
expression(1.96)))
# Add a vertical line at the mean (mu)
abline(v = 0, col = "red", lwd = 2)
# Shade the middle 95% region
transparent_color <- rgb(70, 130, 180, alpha = 50, maxColorValue = 255)
polygon(x = c(-1.96, seq(-1.96, 1.96, 0.01), 1.96),
y = c(0, dt(seq(-1.96, 1.96, 0.01), df), 0),
col = transparent_color)
# Add the "95%" label
text(0, 0.2, "95%", col = "black", cex = 1.5)
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-3, 3, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2),df]),
0,
expression(t[frac(alpha,2),df])))
# Add a vertical line at the mean (mu)
abline(v = 0, col = "red", lwd = 2)
# Shade the middle 95% region
transparent_color <- rgb(70, 130, 180, alpha = 50, maxColorValue = 255)
polygon(x = c(-1.96, seq(-1.96, 1.96, 0.01), 1.96),
y = c(0, dt(seq(-1.96, 1.96, 0.01), df), 0),
col = transparent_color)
# Add the "95%" label
text(0, 0.2, "95%", col = "black", cex = 1.5)
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-3, 3, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2)df]),
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-3, 3, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2),df]),
0,
expression(t[frac(alpha,2),df])))
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-3, 3, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2),\df]),
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-3, 3, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2),/df]),
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-3, 3, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2) df]),
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2)~df]),
0,
expression(t[frac(alpha,2)~df])))
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-3, 3, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2)~df]),
0,
expression(t[frac(alpha,2)~df])))
# Add a vertical line at the mean (mu)
abline(v = 0, col = "red", lwd = 2)
# Shade the middle 95% region
transparent_color <- rgb(70, 130, 180, alpha = 50, maxColorValue = 255)
polygon(x = c(-1.96, seq(-1.96, 1.96, 0.01), 1.96),
y = c(0, dt(seq(-1.96, 1.96, 0.01), df), 0),
col = transparent_color)
# Add the "95%" label
text(0, 0.2, "95%", col = "black", cex = 1.5)
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-3, 3, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2)*","~df]),
0,
expression(t[frac(alpha,2)*","~df])))
# Add a vertical line at the mean (mu)
abline(v = 0, col = "red", lwd = 2)
# Shade the middle 95% region
transparent_color <- rgb(70, 130, 180, alpha = 50, maxColorValue = 255)
polygon(x = c(-1.96, seq(-1.96, 1.96, 0.01), 1.96),
y = c(0, dt(seq(-1.96, 1.96, 0.01), df), 0),
col = transparent_color)
# Add the "95%" label
text(0, 0.2, "95%", col = "black", cex = 1.5)
text(0, 0.2, "2.5%", col = "black", cex = 1.5)
text(3, 0, "2.5%", col = "black", cex = 1.5)
text(3, 0.05, "2.5%", col = "black", cex = 1.5)
text(2, 0.05, "2.5%", col = "black", cex = 1.5)
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-4, 4, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2)*","~df]),
0,
expression(t[frac(alpha,2)*","~df])))
# Add a vertical line at the mean (mu)
abline(v = 0, col = "red", lwd = 2)
# Shade the middle 95% region
transparent_color <- rgb(70, 130, 180, alpha = 50, maxColorValue = 255)
polygon(x = c(-1.96, seq(-1.96, 1.96, 0.01), 1.96),
y = c(0, dt(seq(-1.96, 1.96, 0.01), df), 0),
col = transparent_color)
# Add the "95%" label
text(0, 0.2, "95%", col = "black", cex = 1.5)
text(2, 0.05, "2.5%", col = "black", cex = 1.5)
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-4, 4, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-3, 3), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2)*","~df]),
0,
expression(t[frac(alpha,2)*","~df])))
# Add a vertical line at the mean (mu)
abline(v = 0, col = "red", lwd = 2)
# Shade the middle 95% region
transparent_color <- rgb(70, 130, 180, alpha = 50, maxColorValue = 255)
polygon(x = c(-1.96, seq(-1.96, 1.96, 0.01), 1.96),
y = c(0, dt(seq(-1.96, 1.96, 0.01), df), 0),
col = transparent_color)
# Add the "95%" label
text(0, 0.2, "95%", col = "black", cex = 1.5)
text(3, 0.05, "2.5%", col = "black", cex = 1.5)
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-4, 4, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-4, 4), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-1.96, 0, 1.96), padj = 0.75,
labels = c(expression(-t[frac(alpha,2)*","~df]),
0,
expression(t[frac(alpha,2)*","~df])))
# Add a vertical line at the mean (mu)
abline(v = 0, col = "red", lwd = 2)
# Shade the middle 95% region
transparent_color <- rgb(70, 130, 180, alpha = 50, maxColorValue = 255)
polygon(x = c(-1.96, seq(-1.96, 1.96, 0.01), 1.96),
y = c(0, dt(seq(-1.96, 1.96, 0.01), df), 0),
col = transparent_color)
# Add the "95%" label
text(0, 0.2, "95%", col = "black", cex = 1.5)
text(3, 0.05, "2.5%", col = "black", cex = 1.5)
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-4, 4, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-4, 4), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-2.62, 0, 2.62), padj = 0.75,
labels = c(expression(-t[frac(alpha,2)*","~df]),
0,
expression(t[frac(alpha,2)*","~df])))
# Add a vertical line at the mean (mu)
abline(v = 0, col = "red", lwd = 2)
# Shade the middle 95% region
transparent_color <- rgb(70, 130, 180, alpha = 50, maxColorValue = 255)
polygon(x = c(-1.96, seq(-1.96, 1.96, 0.01), 1.96),
y = c(0, dt(seq(-1.96, 1.96, 0.01), df), 0),
col = transparent_color)
# Add the "95%" label
text(0, 0.2, "95%", col = "black", cex = 1.5)
text(3, 0.05, "2.5%", col = "black", cex = 1.5)
# Parameters
n <- 10  # Sample size
df <- n - 1  # Degrees of freedom for t-distribution
mu <- 0    # Mean of the distribution
sigma <- 1  # Standard deviation of the distribution
# Create a sequence of x values
x_vals <- seq(-4, 4, by = 0.01)
# Calculate the density values for the t-distribution
t_density <- dt(x_vals, df)
# Plotting
plot(x_vals, t_density, type = "l", xlim = c(-4, 4), ylim = c(0, 0.4),
main = "Student's t with 9df",
yaxs = "i", xlab = "t", ylab = "", lwd = 2, axes = "F")
# Add x-axis
axis(1, at = c(-2.62, 0, 2.62), padj = 0.75,
labels = c(expression(-t[frac(alpha,2)*","~df]),
0,
expression(t[frac(alpha,2)*","~df])))
# Add a vertical line at the mean (mu)
abline(v = 0, col = "red", lwd = 2)
# Shade the middle 95% region
transparent_color <- rgb(70, 130, 180, alpha = 50, maxColorValue = 255)
polygon(x = c(-2.62, seq(-2.62, 2.62, 0.01), 2.62),
y = c(0, dt(seq(-2.62, 2.62, 0.01), df), 0),
col = transparent_color)
# Add the "95%" label
text(0, 0.2, "95%", col = "black", cex = 1.5)
text(3, 0.05, "2.5%", col = "black", cex = 1.5)
xaringan::inf_mr()
xaringan::inf_mr()
library(plotly)
# Parameters
df_values <- c(3, 10, 30, 100)  # Different degrees of freedom
# Create data
x_vals <- seq(-4, 4, length.out = 400)
t_densities <- lapply(df_values, function(df) dt(x_vals, df))
normal_density <- dnorm(x_vals)
# Create plotly traces for each t-distribution and the normal distribution
t_traces <- lapply(seq_along(df_values), function(i) {
trace_name <- paste("t-distribution (df =", df_values[i], ")")
trace(x = x_vals, y = t_densities[[i]], type = "scatter", mode = "lines", name = trace_name)
})
library(plotly)
# Parameters
df_values <- c(3, 10, 30, 100)  # Different degrees of freedom
# Create data
x_vals <- seq(-4, 4, length.out = 400)
t_densities <- lapply(df_values, function(df) dt(x_vals, df))
normal_density <- dnorm(x_vals)
# Create plotly traces for each t-distribution and the normal distribution
t_traces <- lapply(seq_along(df_values), function(i) {
trace_name <- paste("t-distribution (df =", df_values[i], ")")
trace(x = x_vals, y = t_densities[[i]], type = "scatter", mode = "lines", name = trace_name)
})
library(plotly)
# Parameters
df_values <- c(3, 10, 30, 100)  # Different degrees of freedom
# Create data
x_vals <- seq(-4, 4, length.out = 400)
t_densities <- lapply(df_values, function(df) dt(x_vals, df))
normal_density <- dnorm(x_vals)
# Create plotly traces for each t-distribution and the normal distribution
t_traces <- lapply(seq_along(df_values), function(i) {
trace_name <- paste("t-distribution (df =", df_values[i], ")")
trace(x = x_vals, y = t_densities[[i]], type = "scatter", mode = "lines", name = trace_name)
})
library(plotly)
# Parameters
df_values <- c(3, 10, 30, 100)  # Different degrees of freedom
# Create data
x_vals <- seq(-4, 4, length.out = 400)
t_densities <- lapply(df_values, function(df) dt(x_vals, df))
normal_density <- dnorm(x_vals)
# Create plotly traces for each t-distribution and the normal distribution
t_traces <- lapply(seq_along(df_values), function(i) {
trace_name <- paste("t-distribution (df =", df_values[i], ")")
scatter_trace(
x = x_vals,
y = t_densities[[i]],
mode = "lines",
name = trace_name
)
})
library(plotly)
# Parameters
df_values <- c(3, 10, 30, 100)  # Different degrees of freedom
# Create data
x_vals <- seq(-4, 4, length.out = 400)
t_densities <- lapply(df_values, function(df) dt(x_vals, df))
normal_density <- dnorm(x_vals)
# Create plotly traces for each t-distribution and the normal distribution
t_traces <- lapply(seq_along(df_values), function(i) {
trace_name <- paste("t-distribution (df =", df_values[i], ")")
list(
type = "scatter",
mode = "lines",
name = trace_name,
x = x_vals,
y = t_densities[[i]]
)
})
normal_trace <- list(
type = "scatter",
mode = "lines",
name = "Normal distribution",
x = x_vals,
y = normal_density
)
# Combine traces and create the plot
all_traces <- c(t_traces, normal_trace)
plot <- plot_ly(data = all_traces, x = ~x, y = ~y, type = "scatter", mode = "lines", name = ~name) %>%
layout(
title = "Convergence of Student's t-distribution to Normal Distribution",
xaxis = list(title = "x"),
yaxis = list(title = "Density"),
showlegend = TRUE
)
library(plotly)
# Parameters
df_values <- c(3, 10, 30, 100)  # Different degrees of freedom
x_vals <- seq(-4, 4, length.out = 400)
normal_density <- dnorm(x_vals)
# Create plotly traces for each t-distribution and the normal distribution
traces <- lapply(df_values, function(df) {
t_density <- dt(x_vals, df)
trace(
x = x_vals,
y = t_density,
mode = "lines",
name = paste("t-distribution (df =", df, ")")
)
})
# Parameters
df_values <- c(3, 10, 30, 100)  # Different degrees of freedom
x_vals <- seq(-4, 4, length.out = 400)
normal_density <- dnorm(x_vals)
# Create a data frame for ggplot
df <- data.frame(x = rep(x_vals, length(df_values) + 1),
y = c(sapply(df_values, function(df) dt(x_vals, df)), normal_density),
distribution = rep(c(paste("t-distribution (df =", df_values, ")"), "Normal distribution"), each = length(x_vals)))
# Create ggplot object
gg_plot <- ggplot(df, aes(x = x, y = y, color = distribution)) +
geom_line() +
labs(title = "Convergence of Student's t-distribution to Normal Distribution",
x = "x",
y = "Density") +
theme_minimal()
# Convert to plotly object for interactivity
plotly_plot <- ggplotly(gg_plot)
# Display the plotly object
plotly_plot
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
