xlim(0, 10000)
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot(data.frame(sample_means), aes(x = sample_means)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sample Means with Estimated Mean and Confidence Interval") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed", size = 1) +
geom_vline(xintercept = estimated_mean, color = "green", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = Inf, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "green") +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.1) + # Increased transparency
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = Inf,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "green") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot(data.frame(sample_means), aes(x = sample_means)) +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.1) + # Increased transparency
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sample Means with Estimated Mean and Confidence Interval") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed", size = 1) +
geom_vline(xintercept = estimated_mean, color = "green", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = Inf, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "green") +
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = Inf,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "green") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# First histogram: True Histogram of Prices
p1 <- ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Price by Clean Variable") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = Inf, label = paste("True Avg:", true_average),
vjust = -0.5, hjust = 1, color = "red") +
xlim(0, 10000)+theme_minimal()
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot(data.frame(sample_means), aes(x = sample_means)) +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.1) + # Increased transparency
geom_histogram(fill = "lightblue", bins = 100) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sample Means with Estimated Mean and Confidence Interval") +
geom_vline(xintercept = estimated_mean, color = "green", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = Inf, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "green") +
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = Inf,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "green") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
conf_interval_lower
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.1) + # Increased transparency
geom_histogram(data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 100) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sample Means with Estimated Mean and Confidence Interval") +
geom_vline(xintercept = estimated_mean, color = "green", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = Inf, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "green") +
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = Inf,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "green") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.1) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 100) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sample Means with Estimated Mean and Confidence Interval") +
geom_vline(xintercept = estimated_mean, color = "green", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = Inf, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "green") +
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = Inf,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "green") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.4) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 100) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sample Means with Estimated Mean and Confidence Interval") +
geom_vline(xintercept = estimated_mean, color = "green", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = Inf, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "green") +
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = Inf,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "green") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 100) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sample Means with Estimated Mean and Confidence Interval") +
geom_vline(xintercept = estimated_mean, color = "green", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = Inf, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "green") +
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = Inf,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "green") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 500) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sample Means with Estimated Mean and Confidence Interval") +
geom_vline(xintercept = estimated_mean, color = "green", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = Inf, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "green") +
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = Inf,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "green") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 500) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sample Means with Estimated Mean and Confidence Interval") +
geom_vline(xintercept = estimated_mean, color = "orange", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = Inf, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "green") +
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = Inf,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "green") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Price by Clean Variable") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = 1000, label = paste("True Avg:", true_average),
vjust = -0.5, hjust = 1, color = "red") +
xlim(0, 10000)+theme_minimal()
ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Price by Clean Variable") +
geom_vline(xintercept = round(true_average), color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = 1000, label = paste("True Avg:", true_average),
vjust = -0.5, hjust = 1, color = "red") +
xlim(0, 10000)+theme_minimal()
# First histogram: True Histogram of Prices
p1 <- ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Price by Clean Variable") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = 1000, label = paste("True Avg:", round(true_average)),
vjust = -0.5, hjust = 1, color = "red") +
xlim(0, 10000)+theme_minimal()
ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Price by Clean Variable") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = 1000, label = paste("True Avg:", round(true_average)),
vjust = -0.5, hjust = 1, color = "red") +
xlim(0, 10000)+theme_minimal()
ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Population Distribution") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = 1000, label = paste("True Avg:", round(true_average)),
vjust = -0.5, hjust = 1, color = "red") +
xlim(0, 10000)+theme_minimal()
l
# First histogram: True Histogram of Prices
p1 <- ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Population Distribution") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = 1000, label = paste("True Avg:", round(true_average)),
vjust = -0.5, hjust = 1, color = "red") +
xlim(0, 10000)+theme_minimal()
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 500) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sampling Distribution of the Mean") +
geom_vline(xintercept = estimated_mean, color = "orange", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = Inf, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "green") +
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = Inf,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "green") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 500) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sampling Distribution of the Mean") +
geom_vline(xintercept = estimated_mean, color = "orange", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = 800, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "green") +
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = 700,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "green") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 500) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sampling Distribution of the Mean") +
geom_vline(xintercept = estimated_mean, color = "orange", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = 700, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "orange") +
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = 600,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "orange") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 500) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sampling Distribution of the Mean") +
geom_vline(xintercept = estimated_mean, color = "orange", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = 700, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "orange") +
annotate("text", x = 3000, y = 600,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "orange") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 500) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sampling Distribution of the Mean") +
geom_vline(xintercept = estimated_mean, color = "orange", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = 700, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "orange") +
annotate("text", x = 4000, y = 600,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "orange") +
xlim(0, 10000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# First histogram: True Histogram of Prices
p1 <- ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Population Distribution") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = 1000, label = paste("True Avg:", round(true_average)),
vjust = -0.5, hjust = 1, color = "red") +
xlim(0, 5000)+theme_minimal()
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 500) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sampling Distribution of the Mean") +
geom_vline(xintercept = estimated_mean, color = "orange", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = 700, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "orange") +
annotate("text", x = 4000, y = 600,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "orange") +
xlim(0, 5000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 300) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sampling Distribution of the Mean") +
geom_vline(xintercept = estimated_mean, color = "orange", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = 700, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "orange") +
annotate("text", x = 4000, y = 600,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "orange") +
xlim(0, 5000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# First histogram: True Histogram of Prices
p1 <- ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Population Distribution") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = 1000, label = paste("True Avg:", round(true_average)),
vjust = -0.8, hjust = 1, color = "red") +
xlim(0, 5000)+theme_minimal()
# First histogram: True Histogram of Prices
p1 <- ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Population Distribution") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = 1000, label = paste("True Avg:", round(true_average)),
vjust = -0.8, hjust = 1, color = "red") +
xlim(0, 5000)+theme_minimal()
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 300) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sampling Distribution of the Mean") +
geom_vline(xintercept = estimated_mean, color = "orange", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = 600, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "orange") +
annotate("text", x = 3000, y = 600,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "orange") +
xlim(0, 5000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# First histogram: True Histogram of Prices
p1 <- ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Population Distribution") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = 1000, label = paste("True Avg:", round(true_average)),
vjust = -0.8, hjust = 1, color = "red") +
xlim(0, 5000)+theme_minimal()
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 300) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sampling Distribution of the Mean and Our Estimates") +
geom_vline(xintercept = estimated_mean, color = "orange", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = 600, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "orange") +
annotate("text", x = 3000, y = 600,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "orange") +
xlim(0, 5000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# First histogram: True Histogram of Prices
p1 <- ggplot(cl_list, aes(x = price)) +
geom_histogram(fill = "lightblue", bins = 50) +
labs(x = "Price", y = "Frequency") +
ggtitle("Population Distribution") +
geom_vline(xintercept = true_average, color = "red", linetype = "dashed",
size = 1, show.legend = TRUE) +
annotate("text", x = true_average, y = 1000, label = paste("True Avg:", round(true_average)),
vjust = -0.8, hjust = 1, color = "red") +
xlim(0, 5000)+theme_minimal()
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "orange", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 300) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sampling Distribution of the Mean and Our Estimates") +
geom_vline(xintercept = estimated_mean, color = "black", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = 600, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "orange") +
annotate("text", x = 3000, y = 600,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "orange") +
xlim(0, 5000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
# Second histogram: Sample Means with estimated mean and confidence interval
p2 <- ggplot() +
geom_rect(aes(xmin = conf_interval_lower, xmax = conf_interval_upper, ymin = -Inf, ymax = Inf),
fill = "orange", alpha = 0.5) + # Increased transparency
geom_histogram(data=data.frame(sample_means), aes(x = sample_means), fill = "lightblue", bins = 300) +
labs(x = "Price", y = "Frequency") +
ggtitle("Sampling Distribution of the Mean and Our Estimates") +
geom_vline(xintercept = estimated_mean, color = "black", linetype = "dashed", size = 1) +
annotate("text", x = estimated_mean, y = 600, label = paste("Est. Mean:", estimated_mean),
vjust = -0.5, hjust = 1, color = "black") +
annotate("text", x = 3000, y = 600,
label = paste("Conf Interval: [", conf_interval_lower, ",", conf_interval_upper, "]"),
vjust = -1, color = "orange") +
xlim(0, 5000)+
annotate("text", x = mean(c(conf_interval_lower, conf_interval_upper)), y = -Inf,
label = "Green band represents 95% Confidence Interval", vjust = 2, color = "green")+theme_minimal()
# Combine the plots
grid.arrange(p1, p2, ncol = 1)
##save the plot
ggsave("C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C3/C3_b/airbnb_true.png", width = 10, height = 10, dpi = 300)
xaringan::inf_mr()
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(dplyr)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(readr)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(hrbrthemes)
library(gridExtra)
library(cowplot)
library(viridis)
library(gapminder)
library(knitr)
library(kableExtra)
library(DT)
load("sample_listing.Rda")
listings <- read.csv("C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C3/C3_a/listings.csv", comment.char="#")
listings=listings%>%
select("id","review_scores_cleanliness","price")%>%
filter(review_scores_cleanliness!="")%>%
mutate(price = as.numeric(gsub("\\$", "", gsub(",", "", price))))
listings$review_scores_cleanliness=as.numeric(listings$review_scores_cleanliness)
listings$clean=listings$review_scores_cleanliness>4.5
listings=listings[listings$price<10000,]
View(listings)
hist(listings$price)
save(listings,file="listing_full_price.Rda")
