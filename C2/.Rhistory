theme(text = element_text(size=30),legend.position="none")+
facet_wrap(~Season_Year)
## eliminate season years which have less than 100 cases total - can't identify peak from the data
dpt_l_longa2=dpt_l_longa%>%
group_by(Season_Year)%>%
summarize(sum(total_cases), n=n())%>%
filter(`sum(total_cases)`>200 & n>35)%>%
mutate(sw=paste(Season_Year))
##plot it
ggplot(dpt_l_longa2, aes(x=Season_Year, y=n)) +
geom_line()+
geom_point()+
xlab("Season_Year")+
ylab("Cases per doctor")+
theme_bw()+
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="darkgrey"),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
strip.background=element_rect(fill=NA, color="black"),
strip.text=element_text(size=20))+
theme(text = element_text(size=30),legend.position="none")+
ylim(0,60)
##keep only those with more than 100 cases
dpt_l_long=dpt_l_long%>%
mutate(sw=paste(Season_Year))%>%
filter(sw %in% dpt_l_longa2$sw)
dpt_l_long=dpt_l_long%>%
group_by(Season_Year,Season_Week)%>%
mutate(total_cases=sum(cases,na.rm=TRUE),total_doctors=sum(measurement.y,na.rm=TRUE))%>%
mutate(cpd=total_cases/total_doctors)%>%
group_by(Season_Year)%>%
mutate(Peak_ind=which.max(total_cases)[1], Peak_week=Season_Week[Peak_ind])
##how to deal with multiple peaks - aggregate it on the woj level?
hist(dpt_l_long$Peak_week, breaks=seq(0,53,1), main="Peak week distribution", xlab="Week")
#dpt_l_long$Peak_week[dpt_l_long$Peak_week<15|dpt_l_long$Peak_week>40]=NA
##discard the one at 0 and the one at 48
dpt_l_long=dpt_l_long%>%
filter(Peak_week>1 & Peak_week<48)
##distance between vacation and peak
dpt_l_long=dpt_l_long%>%
group_by(Season_Year,Kod,age_group)%>%
mutate(Distance=Season_Ferie-Peak_week)
##data by season and woj
dpt_l_long_agg=dpt_l_long%>%
group_by(Season_Year,woj)%>%
summarize(PW=unique(Peak_week))
##draw histogram, but with shares, use ggplot
ggplot(dpt_l_long_agg, aes(x=PW)) +
geom_histogram(aes(y=..count../sum(..count..)), binwidth = 1, fill="lightblue", color="black")+
xlab("Peak week")+
ylab("Share")+
theme_bw()+
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="darkgrey"),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
strip.background=element_rect(fill=NA, color="black"))+
theme(text = element_text(size=30),legend.position="none")+
xlim(1,48)
ggsave(paste0("output/Revision_2/Peaks_distribution.png"), width = 30, height = 20, units = "cm")
Peaks=dpt_l_long[,c("Season_Year","Peak_week","Kod")]
saveRDS(Peaks, "output/Revision_2/Peaks.Rda")
save(Peaks, "output/Revision_2/Peaks.Rda")
save(Peaks, file="output/Revision_2/Peaks.Rda")
saveRda(Peaks, file="output/Revision_2/Peaks.Rda")
save(Peaks, file="Peaks.Rda")
save(Peaks, file="Peaks_heterogeneity.Rda")
getwd()
library(renderthis)
pagedown::chrome_print(input = "C_2_slides_a.html", output = "C_2_slides_a.pdf", timeout = 300)
## Percentiles
#remotes::install_github("jhelvy/renderthis", dependencies = TRUE)
#install.packages("chromote")
#install.packages("renderthis")
#remotes::install_github('yihui/servr')
library(renderthis)
to_pdf("C_2_slides_a.html")
#to_pdf("C_2_slides_a.html")
pagedown::chrome_print(input = "C_2_slides_a.html", output = "C_2_slides_a.pdf", timeout = 300)
#to_pdf("C_2_slides_a.html")
pagedown::chrome_print(input = "C_2_slides_b.html", output = "C_2_slides_b.pdf", timeout = 300)
#to_pdf("C_2_slides_a.html")
pagedown::chrome_print(input = "C_2_slides_b.html", output = "C_2_slides_b.pdf", timeout = 300)
library(renderthis)
#to_pdf("C_2_slides_a.html")
pagedown::chrome_print(input = "C_2_slides_b.html", output = "C_2_slides_b.pdf", timeout = 300)
#to_pdf("C_2_slides_a.html")
pagedown::chrome_print(input = "C_2_slides_b.html", output = "C_2_slides_b.pdf", timeout = 300)
to_pdf("C_2_slides_b.html")
?to_pdf
pagedown::chrome_print(input = "C_2_slides_a.html", output = "C_2_slides_a.pdf", timeout = 300)
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
0.75*300
75*4
280/3
290/3
282/3
0.25*118
0.25*119
0.25*97
0.75*109
0.25*98+0.25*106
0.25*98+0.75*106
0.25*99+0.75*103
0.25*90+0.75*130
0.75*90+0.25*130
0.75*110+0.25*70
sqrt(2.5)
1.5*1.5
xaringan::inf_mr()
library(renderthis)
#to_pdf("C_2_slides_c.html")
pagedown::chrome_print(input = "C_2_slides_c.html", output = "C_2_slides_c.pdf", timeout = 300)
#to_pdf("C_2_slides_c.html")
pagedown::chrome_print(input = "C_2_slides_c.html", output = "C_2_slides_c.pdf", timeout = 300)
knitr::opts_chunk$set(echo = TRUE, dpi=300)
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(dplyr)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(readr)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(reshape2)
library(gapminder)
library(knitr)
library(kableExtra)
library(DT)
library(patchwork)
xaringan::inf_mr()
binsreg(x=dataset$BMI, y=dataset$Income, nbin=10, plot=TRUE, xlab="BMI", ylab="Income")
binsreg(x=dataset$BMI, y=dataset$Income, nbins=10, plot=TRUE, xlab="BMI", ylab="Income")
binsreg(x=dataset$BMI, y=dataset$Income, nbins=10, xlab="BMI", ylab="Income")
binsreg(x=dataset$BMI, y=dataset$Income, nbins=10)
xaringan::inf_mr()
Sigma <- matrix(c(225,  CXY, CXZ,
CXY, 100,   0,
CXZ,   0, 144),
nrow = 3, byrow = TRUE)
plot(X, Y)
########################################################################
#  Title: Visualization & Computation for Business Statistics Homework
#  Description:
#    - Generates simulated data for X, Y, Z with given means, variances,
#      and covariances.
#    - Shows how constant shifts and scaling affect covariance/variance.
#    - Produces basic plots for visualization.
########################################################################
# Install (if needed) and load the 'MASS' package for mvrnorm()
install.packages("MASS") # this only needs to be done once
library(MASS)
set.seed(1234)  # CHANGE THIS TO YOUR STUDENT ID
#---------------------------------------------------------------
# 1. This part will generate the  samples of variables. You will be asked to modify CXY and CXZ
CXY=60 #Covariance of X and Y
CXZ=60 #Covariance of X and Z
#------------------you don't need to modify below
#    Mean vector (in thousands of dollars)
mu <- c(80, 50, 60)
#    Covariance matrix (in thousands of dollars^2)
#    Var(X)=225, Var(Y)=100, Var(Z)=144 (chosen for illustration)
#    Cov(X,Y)=60, Cov(X,Z)=-30, Cov(Y,Z)=0
Sigma <- matrix(c(225,  CXY, CXZ,
CXY, 100,   0,
CXZ,   0, 144),
nrow = 3, byrow = TRUE)
# 2. Simulate data for X, Y, Z (multivariate normal)
n <- 1000  # number of observations (adjust as desired)
dataXYZ <- mvrnorm(n = n, mu = mu, Sigma = Sigma)
# Extract columns for convenience
X <- dataXYZ[,1]
Y <- dataXYZ[,2]
Z <- dataXYZ[,3]
plot(X, Y)
Sxy=X+Y
par(mfrow = c(1, 2))
plot(X, Y)
Sxy=X+Y
hist(Sxy)
CXY=60 #Covariance of X and Y
CXZ=-30 #Covariance of X and Z
#------------------you don't need to modify below
#    Mean vector (in thousands of dollars)
mu <- c(80, 50, 60)
#    Covariance matrix (in thousands of dollars^2)
#    Var(X)=225, Var(Y)=100, Var(Z)=144 (chosen for illustration)
#    Cov(X,Y)=60, Cov(X,Z)=-30, Cov(Y,Z)=0
Sigma <- matrix(c(225,  CXY, CXZ,
CXY, 100,   0,
CXZ,   0, 144),
nrow = 3, byrow = TRUE)
# 2. Simulate data for X, Y, Z (multivariate normal)
n <- 1000  # number of observations (adjust as desired)
dataXYZ <- mvrnorm(n = n, mu = mu, Sigma = Sigma)
# Extract columns for convenience
X <- dataXYZ[,1]
Y <- dataXYZ[,2]
Z <- dataXYZ[,3]
# 2. This will plot the samples together as a scatterplots
par(mfrow = c(1, 2))
plot(X, Y)
Sxy=X+Y
hist(Sxy)
CXY=300 #Covariance of X and Y
CXZ=-30 #Covariance of X and Z
#------------------you don't need to modify below
#    Mean vector (in thousands of dollars)
mu <- c(80, 50, 60)
#    Covariance matrix (in thousands of dollars^2)
#    Var(X)=225, Var(Y)=100, Var(Z)=144 (chosen for illustration)
#    Cov(X,Y)=60, Cov(X,Z)=-30, Cov(Y,Z)=0
Sigma <- matrix(c(225,  CXY, CXZ,
CXY, 100,   0,
CXZ,   0, 144),
nrow = 3, byrow = TRUE)
# 2. Simulate data for X, Y, Z (multivariate normal)
n <- 1000  # number of observations (adjust as desired)
dataXYZ <- mvrnorm(n = n, mu = mu, Sigma = Sigma)
hist(Sxy, xlim = c(x_min, x_max), ylim = c(y_min, y_max))
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 300), ylim = c(0, 300))
Sxy=X+Y
hist(Sxy, xlim = c(0, 300))
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 200), ylim = c(0, 200))
Sxy=X+Y
hist(Sxy, xlim = c(0, 200))
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 200), ylim = c(0, 200))
Sxy=X+Y
hist(Sxy, xlim = c(0, 200))
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 200), ylim = c(0, 200))
Sxy=X+Y
hist(Sxy, xlim = c(0, 200))
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 200), ylim = c(0, 200))
Sxy=X+Y
hist(Sxy, xlim = c(0, 200))
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 200), ylim = c(0, 200))
Sxy=X+Y
hist(Sxy, xlim = c(0, 200))
plot(X, Y, xlim = c(0, 150), ylim = c(0, 150))
hist(Sxy, xlim = c(0, 150))
hist(Sxy, xlim = c(0, 300))
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 150), ylim = c(0, 150))
Sxy=X+Y
hist(Sxy, xlim = c(0, 300))
CXY=0 #Covariance of X and Y
CXZ=-30 #Covariance of X and Z
#------------------you don't need to modify below
#    Mean vector (in thousands of dollars)
mu <- c(80, 50, 60)
#    Covariance matrix (in thousands of dollars^2)
#    Var(X)=225, Var(Y)=100, Var(Z)=144 (chosen for illustration)
#    Cov(X,Y)=60, Cov(X,Z)=-30, Cov(Y,Z)=0
Sigma <- matrix(c(225,  CXY, CXZ,
CXY, 100,   0,
CXZ,   0, 144),
nrow = 3, byrow = TRUE)
# 2. Simulate data for X, Y, Z (multivariate normal)
n <- 1000  # number of observations (adjust as desired)
dataXYZ <- mvrnorm(n = n, mu = mu, Sigma = Sigma)
# Extract columns for convenience
X <- dataXYZ[,1]
Y <- dataXYZ[,2]
Z <- dataXYZ[,3]
# 2. This will plot the samples together as a scatterplots
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 150), ylim = c(0, 150))
Sxy=X+Y
hist(Sxy, xlim = c(0, 300))
CXY=-100 #Covariance of X and Y
CXZ=-30 #Covariance of X and Z
#------------------you don't need to modify below
#    Mean vector (in thousands of dollars)
mu <- c(80, 50, 60)
#    Covariance matrix (in thousands of dollars^2)
#    Var(X)=225, Var(Y)=100, Var(Z)=144 (chosen for illustration)
#    Cov(X,Y)=60, Cov(X,Z)=-30, Cov(Y,Z)=0
Sigma <- matrix(c(225,  CXY, CXZ,
CXY, 100,   0,
CXZ,   0, 144),
nrow = 3, byrow = TRUE)
# 2. Simulate data for X, Y, Z (multivariate normal)
n <- 1000  # number of observations (adjust as desired)
dataXYZ <- mvrnorm(n = n, mu = mu, Sigma = Sigma)
# Extract columns for convenience
X <- dataXYZ[,1]
Y <- dataXYZ[,2]
Z <- dataXYZ[,3]
# 2. This will plot the samples together as a scatterplots
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 150), ylim = c(0, 150))
Sxy=X+Y
hist(Sxy, xlim = c(0, 300))
CXY=-300 #Covariance of X and Y
CXZ=-30 #Covariance of X and Z
#------------------you don't need to modify below
#    Mean vector (in thousands of dollars)
mu <- c(80, 50, 60)
#    Covariance matrix (in thousands of dollars^2)
#    Var(X)=225, Var(Y)=100, Var(Z)=144 (chosen for illustration)
#    Cov(X,Y)=60, Cov(X,Z)=-30, Cov(Y,Z)=0
Sigma <- matrix(c(225,  CXY, CXZ,
CXY, 100,   0,
CXZ,   0, 144),
nrow = 3, byrow = TRUE)
# 2. Simulate data for X, Y, Z (multivariate normal)
n <- 1000  # number of observations (adjust as desired)
dataXYZ <- mvrnorm(n = n, mu = mu, Sigma = Sigma)
CXY=-200 #Covariance of X and Y
CXZ=-30 #Covariance of X and Z
#------------------you don't need to modify below
#    Mean vector (in thousands of dollars)
mu <- c(80, 50, 60)
#    Covariance matrix (in thousands of dollars^2)
#    Var(X)=225, Var(Y)=100, Var(Z)=144 (chosen for illustration)
#    Cov(X,Y)=60, Cov(X,Z)=-30, Cov(Y,Z)=0
Sigma <- matrix(c(225,  CXY, CXZ,
CXY, 100,   0,
CXZ,   0, 144),
nrow = 3, byrow = TRUE)
# 2. Simulate data for X, Y, Z (multivariate normal)
n <- 1000  # number of observations (adjust as desired)
dataXYZ <- mvrnorm(n = n, mu = mu, Sigma = Sigma)
CXY=-100 #Covariance of X and Y
CXZ=-30 #Covariance of X and Z
#------------------you don't need to modify below
#    Mean vector (in thousands of dollars)
mu <- c(80, 50, 60)
#    Covariance matrix (in thousands of dollars^2)
#    Var(X)=225, Var(Y)=100, Var(Z)=144 (chosen for illustration)
#    Cov(X,Y)=60, Cov(X,Z)=-30, Cov(Y,Z)=0
Sigma <- matrix(c(225,  CXY, CXZ,
CXY, 100,   0,
CXZ,   0, 144),
nrow = 3, byrow = TRUE)
# 2. Simulate data for X, Y, Z (multivariate normal)
n <- 1000  # number of observations (adjust as desired)
dataXYZ <- mvrnorm(n = n, mu = mu, Sigma = Sigma)
# Extract columns for convenience
X <- dataXYZ[,1]
Y <- dataXYZ[,2]
Z <- dataXYZ[,3]
# 2. This will plot the samples together as a scatterplots
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 150), ylim = c(0, 150))
Sxy=X+Y
hist(Sxy, xlim = c(0, 300))
CXY=100 #Covariance of X and Y
CXZ=-30 #Covariance of X and Z
#------------------you don't need to modify below
#    Mean vector (in thousands of dollars)
mu <- c(80, 50, 60)
#    Covariance matrix (in thousands of dollars^2)
#    Var(X)=225, Var(Y)=100, Var(Z)=144 (chosen for illustration)
#    Cov(X,Y)=60, Cov(X,Z)=-30, Cov(Y,Z)=0
Sigma <- matrix(c(225,  CXY, CXZ,
CXY, 100,   0,
CXZ,   0, 144),
nrow = 3, byrow = TRUE)
# 2. Simulate data for X, Y, Z (multivariate normal)
n <- 1000  # number of observations (adjust as desired)
dataXYZ <- mvrnorm(n = n, mu = mu, Sigma = Sigma)
# Extract columns for convenience
X <- dataXYZ[,1]
Y <- dataXYZ[,2]
Z <- dataXYZ[,3]
# 2. This will plot the samples together as a scatterplots
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 150), ylim = c(0, 150))
Sxy=X+Y
hist(Sxy, xlim = c(0, 300))
Xp=X+50
par(mfrow = c(1, 2))
plot(X, Y, xlim = c(0, 150), ylim = c(0, 150))
Sxy=X+Y
hist(Sxy, xlim = c(0, 300))
par(mfrow = c(1, 2))
Xp=X+50
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 150), ylim = c(0, 150))
Sxy=Xp+Y
hist(Sxy, xlim = c(0, 300))
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 200), ylim = c(0, 150))
Sxy=Xp+Y
hist(Sxy, xlim = c(0, 400))
Xp=X-50
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 200), ylim = c(0, 150))
Sxy=Xp+Y
Xp=X-50
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 200), ylim = c(0, 150))
Sxy=Xp+Y
hist(Sxy, xlim = c(0, 400))
Xp=X+50
Xp=X+50
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 200), ylim = c(0, 150))
Sxy=Xp+Y
hist(Sxy, xlim = c(0, 400))
Xp=X
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 200), ylim = c(0, 150))
Sxy=Xp+Y
hist(Sxy, xlim = c(0, 400))
c=0 # Change this constant
Xp=X+c
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 200), ylim = c(0, 150))
Sxy=Xp+Y
hist(Sxy, xlim = c(0, 400))
c=0 # Change this constant
Xp=X+c
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 200), ylim = c(0, 150))
Sxy=Xp+Y
hist(Sxy, xlim = c(0, 400))
c=0 # Change this constant
Xp=X+c
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 200), ylim = c(0, 150))
Sxy=Xp+Y
hist(Sxy, xlim = c(0, 400))
cov(Xp,Y)
c=50 # Change this constant
Xp=X+c
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 200), ylim = c(0, 150))
Sxy=Xp+Y
hist(Sxy, xlim = c(0, 400))
cov(Xp,Y)
c=100 # Change this constant
Xp=X+c
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 200), ylim = c(0, 150))
Sxy=Xp+Y
hist(Sxy, xlim = c(0, 400))
cov(Xp,Y)
c=50 # Change this constant
Xp=X+c
par(mfrow = c(1, 2))
plot(Xp, Y, xlim = c(0, 200), ylim = c(0, 150))
Sxy=Xp+Y
hist(Sxy, xlim = c(0, 400))
cov(Xp,Y)
a=1 # Change this constant
b=1 # Change this constant
Xd=X*b
Yd=Y*a
par(mfrow = c(1, 2))
plot(Xd, Yd, xlim = c(0, 200), ylim = c(0, 150))
Sxyd=Xd+Yd
hist(Sxyd, xlim = c(0, 400))
cov(Xd,Yd)
a=0.2 # Change this constant
b=1 # Change this constant
Xd=X*b
Yd=Y*a
par(mfrow = c(1, 2))
plot(Xd, Yd, xlim = c(0, 200), ylim = c(0, 150))
Sxyd=Xd+Yd
hist(Sxyd, xlim = c(0, 400))
cov(Xd,Yd)
a=0.2 # Change this constant
b=1 # Change this constant
Xd=X*a
Yd=Y*b
par(mfrow = c(1, 2))
plot(Xd, Yd, xlim = c(0, 200), ylim = c(0, 150))
Sxyd=Xd+Yd
hist(Sxyd, xlim = c(0, 400))
cov(Xd,Yd)
a=0.2 # Change this constant
b=2 # Change this constant
Xd=X*a
Yd=Y*b
par(mfrow = c(1, 2))
plot(Xd, Yd, xlim = c(0, 200), ylim = c(0, 150))
Sxyd=Xd+Yd
hist(Sxyd, xlim = c(0, 400))
cov(Xd,Yd)
# Part 4
a=2 # Change this constant
b=2 # Change this constant
Xd=X*a
Yd=Y*b
par(mfrow = c(1, 2))
plot(Xd, Yd, xlim = c(0, 200), ylim = c(0, 150))
Sxyd=Xd+Yd
hist(Sxyd, xlim = c(0, 400))
cov(Xd,Yd)
library(renderthis)
#to_pdf("C_2_slides_c.html")
pagedown::chrome_print(input = "C_2_slides_d.html", output = "C_2_slides_d.pdf", timeout = 300)
to_pdf("C_2_slides_d.html")
