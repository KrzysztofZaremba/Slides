dataset <- rbind(mexico_city, guadalajara)
cov_mexico <- cov(dataset$Education, dataset$Income)
cov_guadalajara <- cov(dataset$BMI, dataset$Income)
# Create individual plots with annotations for covariances
plot_education <- ggplot(data = dataset, aes(x = Education, y = Income)) +
geom_point() +
labs(x = "Years of Education", y = "Income") +
geom_text(data = data.frame(x = 12, y = 90000, label = paste("Cov (Education):", round(cov_mexico, 2))), aes(x, y, label = label), color = "blue")
plot_bmi <- ggplot(data = dataset, aes(x = BMI, y = Income)) +
geom_point() +
labs(x = "BMI", y = "Income") +
geom_text(data = data.frame(x = 18, y = 90000, label = paste("Cov (BMI):", round(cov_guadalajara, 2))), aes(x, y, label = label), color = "red")
# Combine the plots using patchwork
combined_plot <- plot_education + plot_bmi +
plot_layout(ncol = 2, widths = c(1, 1))
# Display the combined plot
print(combined_plot)
cor(dataset$BMI, dataset$Income)
cor(dataset$Education, dataset$Income)
library(plotly)
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
# Negative correlation
x2 <- rnorm(n)
y2 <- -x2 + rnorm(n)
# No correlation
x3 <- rnorm(n)
y3 <- rnorm(n)
# Different slopes, same correlation
x4 <- rnorm(n)
y4 <- 2 * x4 + rnorm(n)
x5 <- rnorm(n)
y5 <- 0.5 * x5 + rnorm(n)
# Non-linear relationship with near zero correlation
x6 <- seq(-2*pi, 2*pi, length.out = n)
y6 <- sin(x6) + rnorm(n, sd=0.5)
# Combine data
df <- data.frame(
x = c(x1, x2, x3, x4, x5, x6),
y = c(y1, y2, y3, y4, y5, y6),
group = factor(rep(1:6, each=n))
)
# Create the interactive plot
plot_ly(data = df, x = ~x, y = ~y, text = ~round(cor(x, y), 2),
colors = ~group, type = 'scatter', mode = 'markers',
marker = list(size = 8)) %>%
layout(title = "Interactive scatter plots with different correlations",
xaxis = list(title = "X"), yaxis = list(title = "Y")) %>%
add_trace(type = "scatter", mode = "markers", color = ~group,
hoverinfo = "text", hoverlabel = list(bgcolor = "white"))
library(plotly)
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
# Negative correlation
x2 <- rnorm(n)
y2 <- -x2 + rnorm(n)
# No correlation
x3 <- rnorm(n)
y3 <- rnorm(n)
# Different slopes, same correlation
x4 <- rnorm(n)
y4 <- 2 * x4 + rnorm(n)
x5 <- rnorm(n)
y5 <- 0.5 * x5 + rnorm(n)
# Non-linear relationship with near zero correlation
x6 <- seq(-2*pi, 2*pi, length.out = n)
y6 <- sin(x6) + rnorm(n, sd=0.5)
# Combine data
df <- data.frame(
x = c(x1, x2, x3, x4, x5, x6),
y = c(y1, y2, y3, y4, y5, y6),
group = factor(rep(1:6, each=n))
)
plot_ly(data = df, x = ~x, y = ~y, text = ~round(cor(x, y), 2),
colors = ~group, type = 'scatter', mode = 'markers',
marker = list(size = 8))
plot_ly(data = df, x = ~x, y = ~y, text = ~round(cor(x, y), 2),
colors = ~group, type = 'scatter', mode = 'markers',
marker = list(size = 8)) %>%
layout(title = "Interactive scatter plots with different correlations",
xaxis = list(title = "X"), yaxis = list(title = "Y"))
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = round(cor(x1, y1), 2), type = 'scatter', mode = 'markers') %>%
layout(title = "Positive Correlation")
# Negative correlation
x2 <- rnorm(n)
y2 <- -x2 + rnorm(n)
plot2 <- plot_ly(x = x2, y = y2, text = round(cor(x2, y2), 2), type = 'scatter', mode = 'markers') %>%
layout(title = "Negative Correlation")
# No correlation
x3 <- rnorm(n)
y3 <- rnorm(n)
plot3 <- plot_ly(x = x3, y = y3, text = round(cor(x3, y3), 2), type = 'scatter', mode = 'markers') %>%
layout(title = "No Correlation")
# Different slopes, same correlation (slope 2)
x4 <- rnorm(n)
y4 <- 2 * x4 + rnorm(n)
plot4 <- plot_ly(x = x4, y = y4, text = round(cor(x4, y4), 2), type = 'scatter', mode = 'markers') %>%
layout(title = "Slope = 2")
# Different slopes, same correlation (slope 0.5)
x5 <- rnorm(n)
y5 <- 0.5 * x5 + rnorm(n)
plot5 <- plot_ly(x = x5, y = y5, text = round(cor(x5, y5), 2), type = 'scatter', mode = 'markers') %>%
layout(title = "Slope = 0.5")
# Non-linear relationship with near zero correlation
x6 <- seq(-2*pi, 2*pi, length.out = n)
y6 <- sin(x6) + rnorm(n, sd=0.5)
plot6 <- plot_ly(x = x6, y = y6, text = round(cor(x6, y6), 2), type = 'scatter', mode = 'markers') %>%
layout(title = "Non-linear, Near Zero Correlation")
# Combine plots into a single plot with multiple subplots
subplot(plot1, plot2, plot3, plot4, plot5, plot6, nrows = 3, margin = 0.1)
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = round(cor(x1, y1), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Negative correlation
x2 <- rnorm(n)
y2 <- -x2 + rnorm(n)
plot2 <- plot_ly(x = x2, y = y2, text = round(cor(x2, y2), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# No correlation
x3 <- rnorm(n)
y3 <- rnorm(n)
plot3 <- plot_ly(x = x3, y = y3, text = round(cor(x3, y3), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Different slopes, same correlation (slope 2)
x4 <- rnorm(n)
y4 <- 2 * x4 + rnorm(n)
plot4 <- plot_ly(x = x4, y = y4, text = round(cor(x4, y4), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Different slopes, same correlation (slope 0.5)
x5 <- rnorm(n)
y5 <- 0.5 * x5 + rnorm(n)
plot5 <- plot_ly(x = x5, y = y5, text = round(cor(x5, y5), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Non-linear relationship with near zero correlation
x6 <- seq(-2*pi, 2*pi, length.out = n)
y6 <- sin(x6) + rnorm(n, sd=0.5)
plot6 <- plot_ly(x = x6, y = y6, text = round(cor(x6, y6), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Combine plots into a single plot with multiple subplots (in 2 rows)
subplot(plot1, plot2, plot3, plot4, plot5, plot6, nrows = 2, margin = 0.1)
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = round(cor(x1, y1), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Negative correlation
x2 <- rnorm(n)
y2 <- -x2 + rnorm(n)
plot2 <- plot_ly(x = x2, y = y2, text = round(cor(x2, y2), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# No correlation
x3 <- rnorm(n)
y3 <- rnorm(n)
plot3 <- plot_ly(x = x3, y = y3, text = round(cor(x3, y3), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
noise <- rnorm(n)
# Different slopes, same correlation (slope 2)
x4 <- rnorm(n)
y4 <- 2 * x4 + noise
plot4 <- plot_ly(x = x4, y = y4, text = round(cor(x4, y4), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Different slopes, same correlation (slope 0.5)
x5 <- rnorm(n)
y5 <- 0.5 * x5 + noise
plot5 <- plot_ly(x = x5, y = y5, text = round(cor(x5, y5), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Non-linear relationship with near zero correlation
x6 <- seq(-2*pi, 2*pi, length.out = n)
y6 <- sin(x6) + rnorm(n, sd=0.5)
plot6 <- plot_ly(x = x6, y = y6, text = round(cor(x6, y6), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Combine plots into a single plot with multiple subplots (in 2 rows)
subplot(plot1, plot2, plot3, plot4, plot5, plot6, nrows = 2, margin = 0.02)
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = round(cor(x1, y1), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Negative correlation
x2 <- rnorm(n)
y2 <- -x2 + rnorm(n)
plot2 <- plot_ly(x = x2, y = y2, text = round(cor(x2, y2), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# No correlation
x3 <- rnorm(n)
y3 <- rnorm(n)
plot3 <- plot_ly(x = x3, y = y3, text = round(cor(x3, y3), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
x_base <- rnorm(n)
y_base <- x_base + rnorm(n)
cor_base <- cor(x_base, y_base)
# Create the first plot with slope 2 by scaling the base relationship
x4 <- x_base
y4 <- 2 * y_base
plot4 <- plot_ly(x = x4, y = y4, text = round(cor(x4, y4), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Create the second plot with slope 0.5 by scaling the base relationship
x5 <- 2 * x_base
y5 <- y_base
plot5 <- plot_ly(x = x5, y = y5, text = round(cor(x5, y5), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Non-linear relationship with near zero correlation
x6 <- seq(-2*pi, 2*pi, length.out = n)
y6 <- sin(x6) + rnorm(n, sd=0.5)
plot6 <- plot_ly(x = x6, y = y6, text = round(cor(x6, y6), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
# Combine plots into a single plot with multiple subplots (in 2 rows)
subplot(plot1, plot2, plot3, plot4, plot5, plot6, nrows = 2, margin = 0.02)
library(plotly)
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
xlim <- c(-4, 4)
ylim <- c(-8, 8)
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = round(cor(x1, y1), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
xlim <- c(-4, 4)
ylim <- c(-8, 8)
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = round(cor(x1, y1), 2), type = 'scatter', mode = 'markers', showlegend = FALSE)
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
plot_ly(x = x2, y = y2, text = paste("correlation:", round(cor(x2, y2), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)
plot_ly(x = x3, y = y3, text = paste("correlation:",round(cor(x3, y3), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
plot_ly(x = x3, y = y3, text = paste("correlation:",round(cor(x3, y3), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)
library(plotly)
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
xlim <- c(-4, 4)
ylim <- c(-8, 8)
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = paste("correlation:",round(cor(x1, y1), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
library(plotly)
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
xlim <- c(-4, 4)
ylim <- c(-8, 8)
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = paste("correlation:",round(cor(x1, y1), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
library(plotly)
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
xlim <- c(-4, 4)
ylim <- c(-8, 8)
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = paste("correlation:",round(cor(x1, y1), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
plot1
library(plotly)
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
xlim <- c(-4, 4)
ylim <- c(-8, 8)
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = paste("correlation:",round(cor(x1, y1), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Negative correlation
x2 <- rnorm(n)
y2 <- -x2 + rnorm(n)
plot2 <- plot_ly(x = x2, y = y2, text = paste("correlation:", round(cor(x2, y2), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# No correlation
x3 <- rnorm(n)
y3 <- rnorm(n)
plot3 <- plot_ly(x = x3, y = y3, text = paste("correlation:",round(cor(x3, y3), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
x_base <- rnorm(n)
y_base <- x_base + rnorm(n)
cor_base <- cor(x_base, y_base)
# Create the first plot with slope 2 by scaling the base relationship
x4 <- x_base
y4 <- 2 * y_base
plot4 <- plot_ly(x = x4, y = y4, text = paste("correlation:",round(cor(x4, y4), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Create the second plot with slope 0.5 by scaling the base relationship
x5 <- 2 * x_base
y5 <- y_base
plot5 <- plot_ly(x = x5, y = y5, text = paste("correlation:",round(cor(x5, y5), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Non-linear relationship with near zero correlation
x6 <- seq(-2*pi, 2*pi, length.out = n)
y6 <- sin(x6) + rnorm(n, sd=0.5)
plot6 <- plot_ly(x = x6, y = y6, text = paste("correlation:",round(cor(x6, y6), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Combine plots into a single plot with multiple subplots (in 2 rows)
subplot(plot1, plot2, plot3, plot4, plot5, plot6, nrows = 2, margin = 0.02)
library(plotly)
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
xlim <- c(-4, 4)
ylim <- c(-8, 8)
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = paste("correlation:",round(cor(x1, y1), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Negative correlation
x2 <- rnorm(n)
y2 <- -x2 + rnorm(n)
plot2 <- plot_ly(x = x2, y = y2, text = paste("correlation:", round(cor(x2, y2), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# No correlation
x3 <- rnorm(n)
y3 <- rnorm(n)
plot3 <- plot_ly(x = x3, y = y3, text = paste("correlation:",round(cor(x3, y3), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
x_base <- rnorm(n)
y_base <- x_base + rnorm(n)
cor_base <- cor(x_base, y_base)
# Create the first plot with slope 2 by scaling the base relationship
x4 <- x_base
y4 <- 2 * y_base
plot4 <- plot_ly(x = x4, y = y4, text = paste("correlation:",round(cor(x4, y4), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Create the second plot with slope 0.5 by scaling the base relationship
x5 <- 2 * x_base
y5 <- y_base
plot5 <- plot_ly(x = x5, y = y5, text = paste("correlation:",round(cor(x5, y5), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Non-linear relationship with near zero correlation
x6 <- seq(-4*pi, 4*pi, length.out = n)
y6 <- sin(x6) + rnorm(n, sd=0.5)
plot6 <- plot_ly(x = x6, y = y6, text = paste("correlation:",round(cor(x6, y6), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Combine plots into a single plot with multiple subplots (in 2 rows)
subplot(plot1, plot2, plot3, plot4, plot5, plot6, nrows = 2, margin = 0.02)
library(plotly)
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
xlim <- c(-4, 4)
ylim <- c(-8, 8)
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = paste("correlation:",round(cor(x1, y1), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Negative correlation
x2 <- rnorm(n)
y2 <- -x2 + rnorm(n)
plot2 <- plot_ly(x = x2, y = y2, text = paste("correlation:", round(cor(x2, y2), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# No correlation
x3 <- rnorm(n)
y3 <- rnorm(n)
plot3 <- plot_ly(x = x3, y = y3, text = paste("correlation:",round(cor(x3, y3), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
x_base <- rnorm(n)
y_base <- x_base + rnorm(n)
cor_base <- cor(x_base, y_base)
# Create the first plot with slope 2 by scaling the base relationship
x4 <- x_base
y4 <- 2 * y_base
plot4 <- plot_ly(x = x4, y = y4, text = paste("correlation:",round(cor(x4, y4), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Create the second plot with slope 0.5 by scaling the base relationship
x5 <- 2 * x_base
y5 <- y_base
plot5 <- plot_ly(x = x5, y = y5, text = paste("correlation:",round(cor(x5, y5), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Non-linear relationship with near zero correlation
x6 <- seq(-1*pi, 1*pi, length.out = n)
y6 <- sin(x6) + rnorm(n, sd=0.5)
plot6 <- plot_ly(x = x6, y = y6, text = paste("correlation:",round(cor(x6, y6), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Combine plots into a single plot with multiple subplots (in 2 rows)
subplot(plot1, plot2, plot3, plot4, plot5, plot6, nrows = 2, margin = 0.02)
library(plotly)
# Set random seed for reproducibility
set.seed(123)
# Generate data
n <- 100
xlim <- c(-4, 4)
ylim <- c(-8, 8)
# Positive correlation
x1 <- rnorm(n)
y1 <- x1 + rnorm(n)
plot1 <- plot_ly(x = x1, y = y1, text = paste("correlation:",round(cor(x1, y1), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Negative correlation
x2 <- rnorm(n)
y2 <- -x2 + rnorm(n)
plot2 <- plot_ly(x = x2, y = y2, text = paste("correlation:", round(cor(x2, y2), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# No correlation
x3 <- rnorm(n)
y3 <- rnorm(n)
plot3 <- plot_ly(x = x3, y = y3, text = paste("correlation:",round(cor(x3, y3), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
x_base <- rnorm(n)
y_base <- x_base + rnorm(n)
cor_base <- cor(x_base, y_base)
# Create the first plot with slope 2 by scaling the base relationship
x4 <- x_base
y4 <- 2 * y_base
plot4 <- plot_ly(x = x4, y = y4, text = paste("correlation:",round(cor(x4, y4), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Create the second plot with slope 0.5 by scaling the base relationship
x5 <- 2 * x_base
y5 <- y_base
plot5 <- plot_ly(x = x5, y = y5, text = paste("correlation:",round(cor(x5, y5), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Non-linear relationship with near zero correlation
x6 <- seq(-2*pi, 2*pi, length.out = n)
y6 <- sin(x6) + rnorm(n, sd=0.5)
plot6 <- plot_ly(x = x6, y = y6, text = paste("correlation:",round(cor(x6, y6), 2)), type = 'scatter', mode = 'markers', showlegend = FALSE)%>%
layout(xaxis = list(range = xlim), yaxis = list(range = ylim))
# Negative correlation
# Combine plots into a single plot with multiple subplots (in 2 rows)
subplot(plot1, plot2, plot3, plot4, plot5, plot6, nrows = 2, margin = 0.02)
xaringan::inf_mr()
xaringan::inf_mr()
knitr::opts_chunk$set(echo = TRUE, dpi=300)
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(dplyr)
library(gridExtra)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(ggdist)
library(readr)
library(ggplot2)
library(tidyverse)
library(cowplot)
library(dplyr)
library(xaringan)
library(gridExtra)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(gapminder)
library(knitr)
library(kableExtra)
library(DT)
quantile(data_initial$OldViews, 0.25),
load("C:/Users/kzysi/Dropbox/data_for_krzys/Prepare_data.RDA")
library(renderthis)
#remotes::install_github('rstudio/chromote')
to_pdf("C_2_slides_a.html")
?to_pdf
#remotes::install_github('rstudio/chromote')
to_pdf("C_2_slides_a.html")
library(renderthis)
#remotes::install_github('rstudio/chromote')
to_pdf("C_2_slides_b.html")
?to_pdf
library(renderthis)
#remotes::install_github('rstudio/chromote')
to_pdf("C_2_slides_c.html")
