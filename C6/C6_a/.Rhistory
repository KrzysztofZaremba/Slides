ggplot(a, aes(x = Time)) +
geom_line(aes(y = trend), color = "blue") +
geom_line(aes(y = trend_pred), color = "red") +
labs(title = "Linear Trend vs Deseasoned Data",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal() +
scale_color_manual(values = c("blue", "red"),
labels = c("Deseasoned Data", "Linear Trend"))
a$trend_pred <- predict(lin_model, newdata = a)
a
a=SS%>%model(classical_decomposition(M, type = "mult")) %>%
components()
a$Time=as.numeric(a$Month)
lin_model=lm(trend~Time, data=a)
print(lin_model)
a$trend_pred <- predict(lin_model, newdata = a)
ggplot(a, aes(x = Time)) +
geom_line(aes(y = trend), color = "blue") +
geom_line(aes(y = trend_pred), color = "red") +
labs(title = "Linear Trend vs Deseasoned Data",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal() +
scale_color_manual(values = c("blue", "red"),
labels = c("Deseasoned Data", "Linear Trend"))
ggplot(a, aes(x = Time)) +
geom_line(aes(y = trend), color = "blue") +
geom_line(aes(y = trend_pred), color = "red") +
labs(title = "Linear Trend vs Deseasoned Data",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal() +
scale_color_manual(values = c("blue", "red"),
labels = c("Deseasoned Data", "Linear Trend"))
ggplot(a, aes(x = Time)) +
geom_line(aes(y = trend), color = "blue") +
geom_line(aes(y = trend_pred), color = "red") +
labs(title = "Linear Trend vs Deseasoned Data",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal() +
scale_color_manual(values = c("blue", "red"),
labels = c("Deseasoned Data", "Linear Trend"))
ggplot(a, aes(x = Time)) +
geom_line(aes(y = season_adjust), color = "blue") +
geom_line(aes(y = M), color = "red") +
labs(title = "Linear Trend vs Deseasoned Data",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal() +
scale_color_manual(values = c("blue", "red"),
labels = c("Deseasoned Data", "Linear Trend"))
y==ggplot(a, aes(x = Time)) +
geom_line(aes(y = trend/ trend_pred), color = "blue") +
labs(title = "Cyclical Component",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal()
y==ggplot(a, aes(x = Time)) +
geom_line(aes(y = trend/trend_pred), color = "blue") +
labs(title = "Cyclical Component",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal()
y=ggplot(a, aes(x = Time)) +
geom_line(aes(y = trend/trend_pred), color = "blue") +
labs(title = "Cyclical Component",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal()
y
y=ggplot(a, aes(x = Time)) +
geom_line(aes(y = trend/trend_pred), color = "black") +
labs(title = "Cyclical Component",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal()
a=HT%>%model(classical_decomposition(M, type = "mult")) %>%
components()
a$Time=as.numeric(a$Month)
lin_model=lm(trend~Time, data=a)
print(lin_model)
a$trend_pred <- predict(lin_model, newdata = a)
x=ggplot(a, aes(x = Time)) +
geom_line(aes(y = trend), color = "blue") +
geom_line(aes(y = trend_pred), color = "red") +
labs(title = "Linear Trend vs Deseasoned Data",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal() +
scale_color_manual(values = c("blue", "red"),
labels = c("Deseasoned Data", "Linear Trend"))
a$cyclical=a$trend/a$trend_pred
y=ggplot(a, aes(x = Time)) +
geom_line(aes(y = cyclical), color = "black") +
labs(title = "Cyclical Component",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal()
theme_minimal()
```
a=HT%>%model(classical_decomposition(M, type = "mult")) %>%
components()
a$Time=as.numeric(a$Month)
lin_model=lm(trend~Time, data=a)
a$trend_pred <- predict(lin_model, newdata = a)
x=ggplot(a, aes(x = Time)) +
geom_line(aes(y = trend), color = "blue") +
geom_line(aes(y = trend_pred), color = "red") +
labs(title = "Linear Trend vs Deseasoned Data",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal() +
scale_color_manual(values = c("blue", "red"),
labels = c("Deseasoned Data", "Linear Trend"))
a$cyclical=a$trend/a$trend_pred
y=ggplot(a, aes(x = Time)) +
geom_line(aes(y = cyclical), color = "black") +
labs(title = "Cyclical Component",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal()
grid.arrange(x, y, ncol=1)
x=ggplot(a, aes(x = Month)) +
geom_line(aes(y = trend), color = "blue") +
geom_line(aes(y = trend_pred), color = "red") +
labs(title = "Linear Trend vs Deseasoned Data",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal() +
scale_color_manual(values = c("blue", "red"),
labels = c("Deseasoned Data", "Linear Trend"))
y=ggplot(a, aes(x = Month)) +
geom_line(aes(y = cyclical), color = "black") +
labs(title = "Cyclical Component",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal()
grid.arrange(x, y, ncol=1)
---
xaringan::inf_mr()
PSB
PBS
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(dplyr)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(readr)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(forecast)
library(hrbrthemes)
library(gridExtra)
library(cowplot)
library(viridis)
library(gapminder)
library(knitr)
library(kableExtra)
library(DT)
library(feasts)
library(tsibble)
library(tsibbledata)
a10=PBS%>%
autoplot(a10, Cost) +
labs(y = "$ (millions)",
title = "Australian antidiabetic drug sales")
a10=PBS%>%
filter(ATC2=="A10")
autoplot(a10, Cost) +
labs(y = "$ (millions)",
title = "Australian antidiabetic drug sales")
PBS %>%
filter(ATC2 == "A10") %>%
select(Month, Concession, Type, Cost) %>%
summarise(total_cost = sum(Cost)) %>%
mutate(total_cost = total_cost / 1e6) -> a10
PBS %>%
filter(ATC2 == "A10") %>%
summarise(total_cost = sum(Cost)) %>%
mutate(total_cost = total_cost / 1e6) -> a10
autoplot(a10, Cost) +
labs(y = "$ (millions)",
title = "Australian antidiabetic drug sales")
autoplot(a10, total_cost) +
labs(y = "$ (millions)",
title = "Australian antidiabetic drug sales")
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(dplyr)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(readr)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(forecast)
library(hrbrthemes)
library(gridExtra)
library(cowplot)
library(viridis)
library(gapminder)
library(knitr)
library(kableExtra)
library(DT)
library(feasts)
library(tsibble)
library(tsibbledata)
library(lubridate)
HT=ungroup(HT)
HT=ungroup(HT)
HT %>%
mutate(
Lag1_M = lag(M, order_by = Month),
Lag2_M = lag(M, order_by = Month, n = 2),
Lag3_M = lag(M, order_by = Month, n = 3)
)
HT=ungroup(HT)
HT %>%
mutate(
Lag1_M = lag(M, order_by = Month),
Lag2_M = lag(M, order_by = Month, n = 2),
Lag3_M = lag(M, order_by = Month, n = 3)
) %>%
select("Month","M", "Lag1_M","Lag2_M", "Lag3_M")
%>%
HT[,c("Month","M")] %>%
mutate(
Lag1_M = lag(M, order_by = Month),
Lag2_M = lag(M, order_by = Month, n = 2),
Lag3_M = lag(M, order_by = Month, n = 3)
)
p=HT|>ACF(M)
t(p)
kable(t(p)[,6])
kable(t(p)[,1:6])
library(fpp3)
install.packages("fpp3")
install.packages("fpp3")
install.packages("fpp3")
xaringan::inf_mr()
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(dplyr)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(readr)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(forecast)
library(hrbrthemes)
library(gridExtra)
library(cowplot)
library(viridis)
library(gapminder)
library(knitr)
library(fpp3)
library(kableExtra)
library(DT)
library(feasts)
library(tsibble)
library(tsibbledata)
library(lubridate)
w
v
retail <- us_employment %>%
filter(Title == "Retail Trade", year(Month) >= 1980)
v=retail %>% autoplot(Employed)
w=retail %>%
ACF(Employed, lag_max = 48) %>%
autoplot()
v
w
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(readr)
library(ggplot2)
library(tidyverse)
library(gridExtra)
library(forecast)
library(hrbrthemes)
library(gridExtra)
library(cowplot)
library(viridis)
library(gapminder)
library(knitr)
library(fpp3)
library(kableExtra)
library(DT)
library(feasts)
library(tsibble)
library(tsibbledata)
library(lubridate)
tp1 <- autoplot(cowtemp, value) +
labs(x = "", y = "chirps per minute", title = "1. Daily temperature of cow")
tp1
plot_grid(tp1, tp2, tp3, tp4, ncol = 4)
plot_grid(tp1, tp2, tp3, tp4,acfa, acfb , acfc , acfd, ncol = 4)
set.seed(30)
y <- ts(rnorm(50))
autoplot(y) + ggtitle("White noise")
```{r, warning=FALSE, fig.height=3, out.width='100%', message=FALSE}
SS|>difference(M)
SS|>difference(M)
SS=ungroup(SS)
SS[,("Month","M")] %>%
SS=ungroup(SS)
SS[,c("Month","M")] %>%
mutate(Diff_M = difference(M))
xaringan::inf_mr()
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(readr)
library(ggplot2)
library(tidyverse)
library(gridExtra)
library(forecast)
library(hrbrthemes)
library(gridExtra)
library(cowplot)
library(viridis)
library(gapminder)
library(knitr)
library(fpp3)
library(kableExtra)
library(DT)
library(feasts)
library(tsibble)
library(tsibbledata)
library(lubridate)
HT %>%
mutate(
`12-MA` = slider::slide_dbl(M, mean,
.before = 6, .after = 5, .complete=TRUE)
) %>%
mutate(Seasonsality=M/`12-MA`)%>%
geom_line(aes(y = Seasonality), colour = "#D55E00")
HT %>%
mutate(Seasonsality=M/`12-MA`)%>%
ggplot()+
geom_line(aes(y = Seasonality), colour = "#D55E00")
HT %>%
mutate(Seasonsality=M/`12-MA`)%>%
autplot()+
geom_line(aes(y = Seasonality), colour = "#D55E00")
HT %>%
mutate(Seasonsality=M/`12-MA`)%>%
autoplot()+
geom_line(aes(y = Seasonality), colour = "#D55E00")
HT %>%
mutate(
`12-MA` = slider::slide_dbl(M, mean,
.before = 6, .after = 5, .complete=TRUE)
) %>%
mutate(Seasonsality=M/`12-MA`)%>%
autoplot(M, color="gray") +
geom_line(aes(y = Seasonality), colour = "#D55E00")
HT %>%
mutate(
MA12 = slider::slide_dbl(M, mean,
.before = 6, .after = 5, .complete=TRUE)
) %>%
mutate(Seasonality=M/MA12)%>%
autoplot(M, color="gray") +
geom_line(aes(y = Seasonality), colour = "#D55E00")
HT %>%
mutate(
MA12 = slider::slide_dbl(M, mean,
.before = 6, .after = 5, .complete=TRUE)
) %>%
mutate(Seasonality=M/MA12)%>%
autoplot() +
geom_line(aes(y = Seasonality), colour = "#D55E00")
HT %>%
mutate(
MA12 = slider::slide_dbl(M, mean,
.before = 6, .after = 5, .complete=TRUE)
) %>%
mutate(Seasonality=M/MA12)%>%
autoplot(Seasonality) +
geom_line(aes(y = Seasonality), colour = "#D55E00")
xaringan::inf_mr()
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(readr)
library(ggplot2)
library(tidyverse)
library(gridExtra)
library(forecast)
library(hrbrthemes)
library(gridExtra)
library(cowplot)
library(viridis)
library(gapminder)
library(knitr)
library(fpp3)
library(kableExtra)
library(DT)
library(feasts)
library(tsibble)
library(tsibbledata)
library(lubridate)
ggplot(a, aes(x = Month)) +
geom_line(aes(y = trend), color = "blue") +
geom_line(aes(y = trend_pred), color = "red") +
labs(title = "Linear Trend vs Deseasoned Data",
y = "Value",
x = "Time",
color = "Legend") +
theme_minimal() +
scale_color_manual(values = c("blue", "red"),
labels = c("Deseasoned Data", "Linear Trend"))+
ylim(0, NA)
load("C:/Users/kzysi/Dropbox/Itam_teaching/Markdowns/C1/Data/Data_health_survey.Rda")
View(Data_health_survey)
library(renderthis)
remotes::install_github('rstudio/chromote')
to_pdf("C_6_slides_a.html")
xaringan::inf_mr()
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(shiny)
library(ggplot2)
library(forecast)
library(plotly)
library(igraph)
library(reshape)
library(spData)
library(leaflet)
library(readr)
library(ggplot2)
library(tidyverse)
library(gridExtra)
library(forecast)
library(hrbrthemes)
library(gridExtra)
library(cowplot)
library(viridis)
library(gapminder)
library(knitr)
library(fpp3)
library(kableExtra)
library(DT)
library(feasts)
library(tsibble)
library(tsibbledata)
library(lubridate)
lin_model
View(a)
60304.43-61.46*361
View(a)
View(a)
38117.37*0.865*1.0876
31187*1.0876*0.865
45050*1.0876*0.865
